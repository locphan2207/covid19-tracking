{"version":3,"sources":["api.js","helpers.js","redux/actions.js","data/summaryFactory.js","data/countryISOCode.js","redux/reducers.js","redux/store.js","components/Header.js","components/Menu.js","components/Summary.js","components/shared/Tick.js","components/shared/LegendItem.js","components/shared/CustomTooltip.js","components/shared/Graph.js","components/shared/Map.js","components/Details.js","components/Extra.js","components/shared/Carousel.js","components/News.js","App.js","index.js"],"names":["COUNTRY_URL","fetchCountriesRequest","a","fetch","method","headers","response","json","fetchCountryDataAllTimeRequest","countrySlug","fetchCountryDataOneMonthRequest","today","Date","setHours","monthAgo","toUTCString","setMonth","getMonth","url","toISOString","fetchWhoRssRequest","mode","text","fetchCdcRssRequest","fetchPressRequest","getShortName","country","split","slice","join","xmlToNewsObject","xml","window","DOMParser","parseFromString","title","getElementsByTagName","innerHTML","data","items","i","length","element","item","j","children","elInfo","tagName","textContent","push","updateRequestStatus","status","type","payload","addGraphData","addNews","news","NewConfirmed","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","Country","CountryCode","Slug","countries","summary","ISOMap","ISO2","initialCountries","initialSummary","initialGraphData","initialRequestStatuses","initialIso","initialNews","initialTab","tab","combineReducers","state","action","graphData","requestStatuses","iso","middlewares","applyMiddleware","thunk","store","createStore","rootReducer","Header","className","MENU_TABS","mapDispatchToProps","setTab","connect","map","t","isCurrentTab","bgStyle","backgroundColor","fontStyle","color","key","onClick","clickedTab","style","toUpperCase","getIncreasePercent","newNum","totalNum","oldNum","Math","round","newConfirmed","totalConfirmed","newDeaths","totalDeaths","newRecovered","totalRecovered","totalActive","newActive","Tick","props","x","y","textAnchor","axisType","value","parseDateForXAxis","parseNumForYAxis","transform","dateStr","date","monthToStr","getDate","1","2","3","4","5","6","7","8","9","10","11","12","num","LegendItem","entry","getColor","CustomTooltip","name","fetchCountryDataAllTime","dispatch","loading","idx","responseJson","dataArray","fetchCountryDataOneMonth","filtered","Confirmed","Recovered","Deaths","useEffect","height","debounce","margin","left","top","right","bottom","dot","dataKey","stroke","strokeWidth","isAnimationActive","width","tickLine","tick","minTickGap","content","wrapperStyle","GEO_URL","useState","setHeight","countryColorMap","useMemo","getCountryColor","document","getElementById","getBoundingClientRect","projection","projectionConfig","scale","zoom","minZoom","maxZoom","geography","geographies","geo","isoCode","properties","ISO_A2","rsmKey","fill","coordinates","geometry","curr","Array","isArray","subject","dx","dy","connectorProps","strokeLinecap","rx","ry","colorScale","scaleLinear","domain","range","countryColor","iso2","searchInput","useRef","countryList","setCountryList","selected","setSelected","sortCountries","ref","placeholder","onKeyDown","current","Object","values","isSelected","id","searchKey","arr","searchRegex","RegExp","searchResult","search","console","log","sort","b","Extra","src","background","speed","loop","autoplay","href","target","Carousel","titleTokens","tokens","description","guid","link","pubDate","who","cdc","press","fetchCountries","countriesObj","fetchWhoRss","fetchCdcRss","fetchPress","publication","author","publishDate","ReactDOM","render","StrictMode"],"mappings":"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,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,cACTE,KAAM,cACNI,KAAM,MAER,CACEN,QAAS,cACTE,KAAM,cACNI,KAAM,MAER,CACEN,QAAS,8BACTE,KAAM,4BACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,YACTE,KAAM,YACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,+BACTE,KAAM,mCACNI,KAAM,MAER,CACEN,QAAS,2BACTE,KAAM,gBACNI,KAAM,MAER,CACEN,QAAS,eACTE,KAAM,eACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,+BACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,cACTE,KAAM,cACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,qBACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,wBACTE,KAAM,wBACNI,KAAM,MAER,CACEN,QAAS,OACTE,KAAM,OACNI,KAAM,MAER,CACEN,QAAS,gCACTE,KAAM,8BACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,YACTE,KAAM,YACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,YACTE,KAAM,YACNI,KAAM,MAER,CACEN,QAAS,gBACTE,KAAM,gBACNI,KAAM,MAER,CACEN,QAAS,iCACTE,KAAM,iCACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,YACTE,KAAM,YACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,4BACTE,KAAM,4BACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,qBACTE,KAAM,qBACNI,KAAM,MAER,CACEN,QAAS,oBACTE,KAAM,oBACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,cACTE,KAAM,cACNI,KAAM,MAER,CACEN,QAAS,cACTE,KAAM,cACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,mBACTE,KAAM,mBACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,YACTE,KAAM,YACNI,KAAM,MAER,CACEN,QAAS,qBACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,gBACTE,KAAM,cACNI,KAAM,MAER,CACEN,QAAS,uBACTE,KAAM,uBACNI,KAAM,MAER,CACEN,QAAS,iBACTE,KAAM,iBACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,gBACTE,KAAM,gBACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,2BACTE,KAAM,2BACNI,KAAM,MAER,CACEN,QAAS,wBACTE,KAAM,wBACNI,KAAM,MAER,CACEN,QAAS,YACTE,KAAM,YACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,mBACTE,KAAM,kBACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,+CACTE,KAAM,+CACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,mBACTE,KAAM,iBACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,OACTE,KAAM,OACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,mBACTE,KAAM,mBACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,2BACTE,KAAM,2BACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,YACTE,KAAM,YACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,oBACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,kBACTE,KAAM,kBACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,OACTE,KAAM,OACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,uBACTE,KAAM,sBACNI,KAAM,MAER,CACEN,QAAS,cACTE,KAAM,cACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,eACTE,KAAM,eACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,mBACTE,KAAM,mBACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,cACTE,KAAM,cACNI,KAAM,MAER,CACEN,QAAS,cACTE,KAAM,cACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,sBACTE,KAAM,sBACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,gBACTE,KAAM,cACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,8BACTE,KAAM,8BACNI,KAAM,MAER,CACEN,QAAS,eACTE,KAAM,eACNI,KAAM,MAER,CACEN,QAAS,yBACTE,KAAM,yBACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,cACTE,KAAM,cACNI,KAAM,MAER,CACEN,QAAS,sBACTE,KAAM,sBACNI,KAAM,MAER,CACEN,QAAS,OACTE,KAAM,OACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,sBACTE,KAAM,sBACNI,KAAM,MAER,CACEN,QAAS,oBACTE,KAAM,oBACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,kCACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,OACTE,KAAM,OACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,0BACTE,KAAM,wBACNI,KAAM,MAER,CACEN,QAAS,cACTE,KAAM,cACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,4BACTE,KAAM,4BACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,6BACTE,KAAM,2BACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,OACTE,KAAM,OACNI,KAAM,MAER,CACEN,QAAS,gBACTE,KAAM,gBACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,gBACTE,KAAM,gBACNI,KAAM,MAER,CACEN,QAAS,YACTE,KAAM,YACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,gBACTE,KAAM,gBACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,OACTE,KAAM,OACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,+BACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,qBACTE,KAAM,iBACNI,KAAM,MAER,CACEN,QAAS,4BACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,iBACTE,KAAM,iBACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,iCACTE,KAAM,iCACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,eACTE,KAAM,eACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,iBACTE,KAAM,iBACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,aACTE,KAAM,aACNI,KAAM,MAER,CACEN,QAAS,QACTE,KAAM,QACNI,KAAM,MAER,CACEN,QAAS,6BACTE,KAAM,6BACNI,KAAM,MAER,CACEN,QAAS,YACTE,KAAM,YACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,iBACTE,KAAM,iBACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,wBACTE,KAAM,YACNI,KAAM,MAER,CACEN,QAAS,sBACTE,KAAM,oBACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,iBACTE,KAAM,iBACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,uBACTE,KAAM,uBACNI,KAAM,MAER,CACEN,QAAS,YACTE,KAAM,YACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,UACTE,KAAM,UACNI,KAAM,MAER,CACEN,QAAS,eACTE,KAAM,eACNI,KAAM,MAER,CACEN,QAAS,eACTE,KAAM,eACNI,KAAM,MAER,CACEN,QAAS,kCACTE,KAAM,YACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,4BACTE,KAAM,OACNI,KAAM,MAER,CACEN,QAAS,SACTE,KAAM,SACNI,KAAM,MAER,CACEN,QAAS,WACTE,KAAM,WACNI,KAAM,MAER,CACEN,QAAS,eACTE,KAAM,eACNI,KAAM,MAER,CACEN,QAAS,mB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","file":"static/js/main.20edcbc1.chunk.js","sourcesContent":["const SUMMARY_URL = \"https://api.covid19api.com/summary\"\r\nconst COUNTRY_URL = \"https://api.covid19api.com/total/country/\" // need country slug after\r\nconst WHO_RSS = \"https://www.who.int/feeds/entity/csr/don/en/rss.xml\"\r\nconst CDC_RSS = \"https://tools.cdc.gov/api/v2/resources/media/404952.rss\"\r\nconst PRESS_URL = \"https://covidtracking.com/api/press\"\r\n\r\nexport const fetchCountriesRequest = async () => {\r\n  const response = await fetch(SUMMARY_URL, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n  return response.json()\r\n}\r\n\r\nexport const fetchCountryDataAllTimeRequest = async (countrySlug) => {\r\n  const response = await fetch(COUNTRY_URL + countrySlug, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n  return response.json()\r\n}\r\n\r\nexport const fetchCountryDataOneMonthRequest = async (countrySlug) => {\r\n  const today = new Date()\r\n  today.setHours(0, 0, 0)\r\n  const monthAgo = new Date(today.toUTCString())\r\n  monthAgo.setMonth(monthAgo.getMonth() - 1)\r\n\r\n  const url = `${COUNTRY_URL}${countrySlug}?from=${monthAgo.toISOString()}&to=${today.toISOString()}`\r\n  const response = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n\r\n  // This api doesn't work with query, so we filter later in the action\r\n  return response.json()\r\n}\r\n\r\nexport const fetchWhoRssRequest = async () => {\r\n  const response = await fetch(WHO_RSS, {\r\n    method: \"GET\",\r\n    mode: \"cors\",\r\n  })\r\n  return response.text()\r\n}\r\n\r\nexport const fetchCdcRssRequest = async () => {\r\n  const response = await fetch(CDC_RSS, {\r\n    method: \"GET\",\r\n    mode: \"cors\",\r\n  })\r\n  return response.text()\r\n}\r\n\r\nexport const fetchPressRequest = async () => {\r\n  const response = await fetch(PRESS_URL, {\r\n    method: \"GET\",\r\n    mode: \"cors\",\r\n  })\r\n  return response.json()\r\n}\r\n","export const getShortName = (country) =>\r\n  country.split(\" \").slice(0, 2).join(\" \")\r\n\r\nexport const xmlToNewsObject = (response) => {\r\n  const parser = new window.DOMParser()\r\n  const xml = parser.parseFromString(response, \"text/xml\")\r\n  const title = xml.getElementsByTagName(\"title\")[0].innerHTML\r\n  const data = xml.getElementsByTagName(\"item\")\r\n  const items = []\r\n  for (let i = 0; i < data.length; i++) {\r\n    const element = data[i]\r\n    const item = {}\r\n    for (let j = 0; j < element.children.length; j++) {\r\n      const elInfo = element.children[j]\r\n      item[elInfo.tagName] = elInfo.textContent\r\n    }\r\n    items.push(item)\r\n  }\r\n\r\n  return { title, items }\r\n}\r\n","import {\r\n  fetchCountriesRequest,\r\n  fetchCountryDataAllTimeRequest,\r\n  fetchCountryDataOneMonthRequest,\r\n  fetchWhoRssRequest,\r\n  fetchCdcRssRequest,\r\n  fetchPressRequest,\r\n} from \"../api\"\r\n\r\nimport { xmlToNewsObject } from \"helpers\"\r\n\r\nexport const SET_COUNTRIES = \"SET_COUNTRIES\"\r\nexport const UPDATE_COUNTRIES = \"UPDATE_COUNTRIES\"\r\nexport const SET_SUMMARY = \"SET_SUMMARY\"\r\nexport const ADD_GRAPH_DATA = \"ADD_GRAPH_DATA\"\r\nexport const UPDATE_REQUEST_STATUS = \"UPDATE_REQUEST_STATUS\"\r\nexport const SET_TAB = \"SET_TAB\"\r\nexport const ADD_NEWS = \"ADD_NEWS\"\r\n\r\nexport const setCountries = (countries) => {\r\n  return {\r\n    type: SET_COUNTRIES,\r\n    payload: {\r\n      ...countries,\r\n    },\r\n  }\r\n}\r\n\r\nexport const updateCountries = (country) => {\r\n  return {\r\n    type: UPDATE_COUNTRIES,\r\n    payload: {\r\n      [country.name]: country,\r\n    },\r\n  }\r\n}\r\n\r\nexport const setSummary = (summary) => {\r\n  return {\r\n    type: SET_SUMMARY,\r\n    payload: {\r\n      ...summary,\r\n    },\r\n  }\r\n}\r\n\r\nexport const updateRequestStatus = (status) => {\r\n  return {\r\n    type: UPDATE_REQUEST_STATUS,\r\n    payload: {\r\n      ...status,\r\n    },\r\n  }\r\n}\r\n\r\nexport const addGraphData = (data) => {\r\n  return {\r\n    type: ADD_GRAPH_DATA,\r\n    payload: {\r\n      ...data,\r\n    },\r\n  }\r\n}\r\n\r\nexport const addNews = (news) => {\r\n  return {\r\n    type: ADD_NEWS,\r\n    payload: {\r\n      ...news,\r\n    },\r\n  }\r\n}\r\n\r\nexport const setTab = (tab) => {\r\n  return {\r\n    type: SET_TAB,\r\n    payload: {\r\n      tab,\r\n    },\r\n  }\r\n}\r\n\r\n// ------------------------- ASYNC ACTIONS --------------------------------\r\nexport const fetchCountries = () => async (dispatch) => {\r\n  dispatch(updateRequestStatus({ fetchCountries: { loading: true } }))\r\n\r\n  const responseJson = await fetchCountriesRequest()\r\n  const countriesObj = {}\r\n  for (const country of responseJson[\"Countries\"]) {\r\n    countriesObj[country[\"Slug\"]] = country\r\n  }\r\n\r\n  dispatch(updateRequestStatus({ fetchCountries: { loading: false } }))\r\n  dispatch(setCountries(countriesObj))\r\n  dispatch(setSummary(responseJson[\"Global\"]))\r\n}\r\n\r\nexport const fetchCountryDataAllTime = (countrySlug) => async (dispatch) => {\r\n  dispatch(updateRequestStatus({ fetchCountryDataAllTime: { loading: true } }))\r\n\r\n  const responseJson = await fetchCountryDataAllTimeRequest(countrySlug)\r\n  const dataArray = []\r\n  for (const idx in responseJson) {\r\n    dataArray.push(responseJson[idx])\r\n  }\r\n  dispatch(updateRequestStatus({ fetchCountryDataAllTime: { loading: false } }))\r\n  dispatch(addGraphData({ [countrySlug]: dataArray }))\r\n}\r\n\r\nexport const fetchCountryDataOneMonth = (countrySlug) => async (dispatch) => {\r\n  dispatch(updateRequestStatus({ fetchCountryDataOneMonth: { loading: true } }))\r\n\r\n  const responseJson = await fetchCountryDataOneMonthRequest(countrySlug)\r\n\r\n  const today = new Date()\r\n  today.setHours(0, 0, 0)\r\n  const monthAgo = new Date(today.toUTCString())\r\n  monthAgo.setMonth(monthAgo.getMonth() - 1)\r\n\r\n  const filtered = []\r\n  for (const item of responseJson) {\r\n    const date = new Date(item.Date)\r\n    if (date >= monthAgo && date <= today) {\r\n      filtered.push({\r\n        Country: item.Country,\r\n        Confirmed: item.Confirmed,\r\n        Recovered: item.Confirmed,\r\n        Deaths: item.Deaths,\r\n        Date: item.Date,\r\n      })\r\n    }\r\n  }\r\n\r\n  dispatch(\r\n    updateRequestStatus({ fetchCountryDataOneMonth: { loading: false } })\r\n  )\r\n  dispatch(addGraphData({ [countrySlug]: filtered }))\r\n}\r\n\r\nexport const fetchWhoRss = () => async (dispatch) => {\r\n  dispatch(updateRequestStatus({ fetchWhoRss: { loading: true } }))\r\n\r\n  const response = await fetchWhoRssRequest()\r\n\r\n  dispatch(updateRequestStatus({ fetchWhoRss: { loading: false } }))\r\n  dispatch(addNews({ who: xmlToNewsObject(response) }))\r\n}\r\n\r\nexport const fetchCdcRss = () => async (dispatch) => {\r\n  dispatch(updateRequestStatus({ fetchCdcRss: { loading: true } }))\r\n\r\n  const response = await fetchCdcRssRequest()\r\n\r\n  dispatch(updateRequestStatus({ fetchCdcRss: { loading: false } }))\r\n  dispatch(addNews({ cdc: xmlToNewsObject(response) }))\r\n}\r\n\r\nexport const fetchPress = () => async (dispatch) => {\r\n  dispatch(updateRequestStatus({ fetchPress: { loading: true } }))\r\n\r\n  const response = await fetchPressRequest()\r\n  const title = \"On the press\"\r\n  const items = response.map((item) => ({\r\n    title: item.title,\r\n    link: item.url,\r\n    description: `Publication: ${item.publication || \"\"} - Author: ${\r\n      item.author || \"\"\r\n    }`,\r\n    pubDate: item.publishDate,\r\n    guid: item.url,\r\n  }))\r\n\r\n  dispatch(updateRequestStatus({ fetchPress: { loading: false } }))\r\n  dispatch(addNews({ press: { title, items } }))\r\n}\r\n","const data = {\r\n  Global: {\r\n    NewConfirmed: 100282,\r\n    TotalConfirmed: 1162857,\r\n    NewDeaths: 5658,\r\n    TotalDeaths: 63263,\r\n    NewRecovered: 15405,\r\n    TotalRecovered: 230845,\r\n  },\r\n  Countries: [\r\n    {\r\n      Country: \"ALA Aland Islands\",\r\n      CountryCode: \"AX\",\r\n      Slug: \"ala-aland-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Afghanistan\",\r\n      CountryCode: \"AF\",\r\n      Slug: \"afghanistan\",\r\n      NewConfirmed: 18,\r\n      TotalConfirmed: 299,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 7,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 10,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Albania\",\r\n      CountryCode: \"AL\",\r\n      Slug: \"albania\",\r\n      NewConfirmed: 29,\r\n      TotalConfirmed: 333,\r\n      NewDeaths: 3,\r\n      TotalDeaths: 20,\r\n      NewRecovered: 10,\r\n      TotalRecovered: 99,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Algeria\",\r\n      CountryCode: \"DZ\",\r\n      Slug: \"algeria\",\r\n      NewConfirmed: 80,\r\n      TotalConfirmed: 1251,\r\n      NewDeaths: 25,\r\n      TotalDeaths: 130,\r\n      NewRecovered: 28,\r\n      TotalRecovered: 90,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"American Samoa\",\r\n      CountryCode: \"AS\",\r\n      Slug: \"american-samoa\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Andorra\",\r\n      CountryCode: \"AD\",\r\n      Slug: \"andorra\",\r\n      NewConfirmed: 27,\r\n      TotalConfirmed: 466,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 17,\r\n      NewRecovered: 5,\r\n      TotalRecovered: 21,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Angola\",\r\n      CountryCode: \"AO\",\r\n      Slug: \"angola\",\r\n      NewConfirmed: 2,\r\n      TotalConfirmed: 10,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 2,\r\n      NewRecovered: 1,\r\n      TotalRecovered: 2,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Anguilla\",\r\n      CountryCode: \"AI\",\r\n      Slug: \"anguilla\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Antarctica\",\r\n      CountryCode: \"AQ\",\r\n      Slug: \"antarctica\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Antigua and Barbuda\",\r\n      CountryCode: \"AG\",\r\n      Slug: \"antigua-and-barbuda\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 15,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Argentina\",\r\n      CountryCode: \"AR\",\r\n      Slug: \"argentina\",\r\n      NewConfirmed: 186,\r\n      TotalConfirmed: 1451,\r\n      NewDeaths: 4,\r\n      TotalDeaths: 43,\r\n      NewRecovered: 13,\r\n      TotalRecovered: 279,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Armenia\",\r\n      CountryCode: \"AM\",\r\n      Slug: \"armenia\",\r\n      NewConfirmed: 34,\r\n      TotalConfirmed: 770,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 7,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 43,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Aruba\",\r\n      CountryCode: \"AW\",\r\n      Slug: \"aruba\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Australia\",\r\n      CountryCode: \"AU\",\r\n      Slug: \"australia\",\r\n      NewConfirmed: 220,\r\n      TotalConfirmed: 5550,\r\n      NewDeaths: 2,\r\n      TotalDeaths: 30,\r\n      NewRecovered: 52,\r\n      TotalRecovered: 701,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Austria\",\r\n      CountryCode: \"AT\",\r\n      Slug: \"austria\",\r\n      NewConfirmed: 257,\r\n      TotalConfirmed: 11781,\r\n      NewDeaths: 18,\r\n      TotalDeaths: 186,\r\n      NewRecovered: 485,\r\n      TotalRecovered: 2507,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Azerbaijan\",\r\n      CountryCode: \"AZ\",\r\n      Slug: \"azerbaijan\",\r\n      NewConfirmed: 78,\r\n      TotalConfirmed: 521,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 5,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 32,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Bahrain\",\r\n      CountryCode: \"BH\",\r\n      Slug: \"bahrain\",\r\n      NewConfirmed: 16,\r\n      TotalConfirmed: 688,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 4,\r\n      NewRecovered: 41,\r\n      TotalRecovered: 423,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Bangladesh\",\r\n      CountryCode: \"BD\",\r\n      Slug: \"bangladesh\",\r\n      NewConfirmed: 9,\r\n      TotalConfirmed: 70,\r\n      NewDeaths: 2,\r\n      TotalDeaths: 8,\r\n      NewRecovered: 4,\r\n      TotalRecovered: 30,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Barbados\",\r\n      CountryCode: \"BB\",\r\n      Slug: \"barbados\",\r\n      NewConfirmed: 1,\r\n      TotalConfirmed: 52,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Belarus\",\r\n      CountryCode: \"BY\",\r\n      Slug: \"belarus\",\r\n      NewConfirmed: 89,\r\n      TotalConfirmed: 440,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 5,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 53,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Belgium\",\r\n      CountryCode: \"BE\",\r\n      Slug: \"belgium\",\r\n      NewConfirmed: 1661,\r\n      TotalConfirmed: 18431,\r\n      NewDeaths: 140,\r\n      TotalDeaths: 1283,\r\n      NewRecovered: 375,\r\n      TotalRecovered: 3247,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Belize\",\r\n      CountryCode: \"BZ\",\r\n      Slug: \"belize\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 4,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Benin\",\r\n      CountryCode: \"BJ\",\r\n      Slug: \"benin\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 16,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 2,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Bermuda\",\r\n      CountryCode: \"BM\",\r\n      Slug: \"bermuda\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Bhutan\",\r\n      CountryCode: \"BT\",\r\n      Slug: \"bhutan\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 5,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 2,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Bolivia\",\r\n      CountryCode: \"BO\",\r\n      Slug: \"bolivia\",\r\n      NewConfirmed: 7,\r\n      TotalConfirmed: 139,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 10,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 1,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Bosnia and Herzegovina\",\r\n      CountryCode: \"BA\",\r\n      Slug: \"bosnia-and-herzegovina\",\r\n      NewConfirmed: 45,\r\n      TotalConfirmed: 624,\r\n      NewDeaths: 4,\r\n      TotalDeaths: 21,\r\n      NewRecovered: 3,\r\n      TotalRecovered: 30,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Botswana\",\r\n      CountryCode: \"BW\",\r\n      Slug: \"botswana\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 4,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Bouvet Island\",\r\n      CountryCode: \"BV\",\r\n      Slug: \"bouvet-island\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Brazil\",\r\n      CountryCode: \"BR\",\r\n      Slug: \"brazil\",\r\n      NewConfirmed: 1304,\r\n      TotalConfirmed: 10360,\r\n      NewDeaths: 86,\r\n      TotalDeaths: 445,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 127,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"British Indian Ocean Territory\",\r\n      CountryCode: \"IO\",\r\n      Slug: \"british-indian-ocean-territory\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"British Virgin Islands\",\r\n      CountryCode: \"VG\",\r\n      Slug: \"british-virgin-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Brunei Darussalam\",\r\n      CountryCode: \"BN\",\r\n      Slug: \"brunei\",\r\n      NewConfirmed: 1,\r\n      TotalConfirmed: 135,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 1,\r\n      TotalRecovered: 66,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Bulgaria\",\r\n      CountryCode: \"BG\",\r\n      Slug: \"bulgaria\",\r\n      NewConfirmed: 18,\r\n      TotalConfirmed: 503,\r\n      NewDeaths: 3,\r\n      TotalDeaths: 17,\r\n      NewRecovered: 4,\r\n      TotalRecovered: 34,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Burkina Faso\",\r\n      CountryCode: \"BF\",\r\n      Slug: \"burkina-faso\",\r\n      NewConfirmed: 16,\r\n      TotalConfirmed: 318,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 16,\r\n      NewRecovered: 16,\r\n      TotalRecovered: 66,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Burundi\",\r\n      CountryCode: \"BI\",\r\n      Slug: \"burundi\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 3,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Cambodia\",\r\n      CountryCode: \"KH\",\r\n      Slug: \"cambodia\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 114,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 15,\r\n      TotalRecovered: 50,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Cameroon\",\r\n      CountryCode: \"CM\",\r\n      Slug: \"cameroon\",\r\n      NewConfirmed: 46,\r\n      TotalConfirmed: 555,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 9,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 17,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Canada\",\r\n      CountryCode: \"CA\",\r\n      Slug: \"canada\",\r\n      NewConfirmed: 541,\r\n      TotalConfirmed: 12978,\r\n      NewDeaths: 39,\r\n      TotalDeaths: 217,\r\n      NewRecovered: 402,\r\n      TotalRecovered: 2577,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Cape Verde\",\r\n      CountryCode: \"CV\",\r\n      Slug: \"cape-verde\",\r\n      NewConfirmed: 1,\r\n      TotalConfirmed: 7,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Cayman Islands\",\r\n      CountryCode: \"KY\",\r\n      Slug: \"cayman-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Central African Republic\",\r\n      CountryCode: \"CF\",\r\n      Slug: \"central-african-republic\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 8,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Chad\",\r\n      CountryCode: \"TD\",\r\n      Slug: \"chad\",\r\n      NewConfirmed: 1,\r\n      TotalConfirmed: 9,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Chile\",\r\n      CountryCode: \"CL\",\r\n      Slug: \"chile\",\r\n      NewConfirmed: 424,\r\n      TotalConfirmed: 4161,\r\n      NewDeaths: 5,\r\n      TotalDeaths: 27,\r\n      NewRecovered: 101,\r\n      TotalRecovered: 528,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"China\",\r\n      CountryCode: \"CN\",\r\n      Slug: \"china\",\r\n      NewConfirmed: 32,\r\n      TotalConfirmed: 82543,\r\n      NewDeaths: 4,\r\n      TotalDeaths: 3330,\r\n      NewRecovered: 186,\r\n      TotalRecovered: 76946,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Christmas Island\",\r\n      CountryCode: \"CX\",\r\n      Slug: \"christmas-island\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Cocos (Keeling) Islands\",\r\n      CountryCode: \"CC\",\r\n      Slug: \"cocos-keeling-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Colombia\",\r\n      CountryCode: \"CO\",\r\n      Slug: \"colombia\",\r\n      NewConfirmed: 139,\r\n      TotalConfirmed: 1406,\r\n      NewDeaths: 7,\r\n      TotalDeaths: 32,\r\n      NewRecovered: 30,\r\n      TotalRecovered: 85,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Comoros\",\r\n      CountryCode: \"KM\",\r\n      Slug: \"comoros\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Congo (Brazzaville)\",\r\n      CountryCode: \"CG\",\r\n      Slug: \"congo-brazzaville\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 22,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 2,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 2,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Congo (Kinshasa)\",\r\n      CountryCode: \"CD\",\r\n      Slug: \"congo-kinshasa\",\r\n      NewConfirmed: 20,\r\n      TotalConfirmed: 154,\r\n      NewDeaths: 5,\r\n      TotalDeaths: 18,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 3,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Cook Islands\",\r\n      CountryCode: \"CK\",\r\n      Slug: \"cook-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Costa Rica\",\r\n      CountryCode: \"CR\",\r\n      Slug: \"costa-rica\",\r\n      NewConfirmed: 19,\r\n      TotalConfirmed: 435,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 2,\r\n      NewRecovered: 2,\r\n      TotalRecovered: 13,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Croatia\",\r\n      CountryCode: \"HR\",\r\n      Slug: \"croatia\",\r\n      NewConfirmed: 47,\r\n      TotalConfirmed: 1126,\r\n      NewDeaths: 4,\r\n      TotalDeaths: 12,\r\n      NewRecovered: 27,\r\n      TotalRecovered: 119,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Cuba\",\r\n      CountryCode: \"CU\",\r\n      Slug: \"cuba\",\r\n      NewConfirmed: 19,\r\n      TotalConfirmed: 288,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 6,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 15,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Cyprus\",\r\n      CountryCode: \"CY\",\r\n      Slug: \"cyprus\",\r\n      NewConfirmed: 30,\r\n      TotalConfirmed: 426,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 11,\r\n      NewRecovered: 5,\r\n      TotalRecovered: 33,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Czech Republic\",\r\n      CountryCode: \"CZ\",\r\n      Slug: \"czech-republic\",\r\n      NewConfirmed: 381,\r\n      TotalConfirmed: 4472,\r\n      NewDeaths: 6,\r\n      TotalDeaths: 59,\r\n      NewRecovered: 6,\r\n      TotalRecovered: 78,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Côte d'Ivoire\",\r\n      CountryCode: \"CI\",\r\n      Slug: \"cote-divoire\",\r\n      NewConfirmed: 27,\r\n      TotalConfirmed: 245,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 6,\r\n      TotalRecovered: 25,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Denmark\",\r\n      CountryCode: \"DK\",\r\n      Slug: \"denmark\",\r\n      NewConfirmed: 323,\r\n      TotalConfirmed: 4269,\r\n      NewDeaths: 22,\r\n      TotalDeaths: 161,\r\n      NewRecovered: 92,\r\n      TotalRecovered: 1379,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Djibouti\",\r\n      CountryCode: \"DJ\",\r\n      Slug: \"djibouti\",\r\n      NewConfirmed: 1,\r\n      TotalConfirmed: 50,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 8,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Dominica\",\r\n      CountryCode: \"DM\",\r\n      Slug: \"dominica\",\r\n      NewConfirmed: 2,\r\n      TotalConfirmed: 14,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Dominican Republic\",\r\n      CountryCode: \"DO\",\r\n      Slug: \"dominican-republic\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 1488,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 68,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 16,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Ecuador\",\r\n      CountryCode: \"EC\",\r\n      Slug: \"ecuador\",\r\n      NewConfirmed: 97,\r\n      TotalConfirmed: 3465,\r\n      NewDeaths: 27,\r\n      TotalDeaths: 172,\r\n      NewRecovered: 35,\r\n      TotalRecovered: 100,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Egypt\",\r\n      CountryCode: \"EG\",\r\n      Slug: \"egypt\",\r\n      NewConfirmed: 85,\r\n      TotalConfirmed: 1070,\r\n      NewDeaths: 5,\r\n      TotalDeaths: 71,\r\n      NewRecovered: 25,\r\n      TotalRecovered: 241,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"El Salvador\",\r\n      CountryCode: \"SV\",\r\n      Slug: \"el-salvador\",\r\n      NewConfirmed: 10,\r\n      TotalConfirmed: 56,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 3,\r\n      NewRecovered: 2,\r\n      TotalRecovered: 2,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Equatorial Guinea\",\r\n      CountryCode: \"GQ\",\r\n      Slug: \"equatorial-guinea\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 16,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 1,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Eritrea\",\r\n      CountryCode: \"ER\",\r\n      Slug: \"eritrea\",\r\n      NewConfirmed: 7,\r\n      TotalConfirmed: 29,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Estonia\",\r\n      CountryCode: \"EE\",\r\n      Slug: \"estonia\",\r\n      NewConfirmed: 78,\r\n      TotalConfirmed: 1039,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 13,\r\n      NewRecovered: 11,\r\n      TotalRecovered: 59,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Ethiopia\",\r\n      CountryCode: \"ET\",\r\n      Slug: \"ethiopia\",\r\n      NewConfirmed: 3,\r\n      TotalConfirmed: 38,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 1,\r\n      TotalRecovered: 4,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Falkland Islands (Malvinas)\",\r\n      CountryCode: \"FK\",\r\n      Slug: \"falkland-islands-malvinas\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Faroe Islands\",\r\n      CountryCode: \"FO\",\r\n      Slug: \"faroe-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Fiji\",\r\n      CountryCode: \"FJ\",\r\n      Slug: \"fiji\",\r\n      NewConfirmed: 5,\r\n      TotalConfirmed: 12,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Finland\",\r\n      CountryCode: \"FI\",\r\n      Slug: \"finland\",\r\n      NewConfirmed: 267,\r\n      TotalConfirmed: 1882,\r\n      NewDeaths: 5,\r\n      TotalDeaths: 25,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 300,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"France\",\r\n      CountryCode: \"FR\",\r\n      Slug: \"france\",\r\n      NewConfirmed: 25646,\r\n      TotalConfirmed: 90848,\r\n      NewDeaths: 1054,\r\n      TotalDeaths: 7574,\r\n      NewRecovered: 1437,\r\n      TotalRecovered: 15572,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"French Guiana\",\r\n      CountryCode: \"GF\",\r\n      Slug: \"french-guiana\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"French Polynesia\",\r\n      CountryCode: \"PF\",\r\n      Slug: \"french-polynesia\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"French Southern Territories\",\r\n      CountryCode: \"TF\",\r\n      Slug: \"french-southern-territories\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Gabon\",\r\n      CountryCode: \"GA\",\r\n      Slug: \"gabon\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 21,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 1,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Gambia\",\r\n      CountryCode: \"GM\",\r\n      Slug: \"gambia\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 4,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 2,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Georgia\",\r\n      CountryCode: \"GE\",\r\n      Slug: \"georgia\",\r\n      NewConfirmed: 7,\r\n      TotalConfirmed: 162,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 8,\r\n      TotalRecovered: 36,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Germany\",\r\n      CountryCode: \"DE\",\r\n      Slug: \"germany\",\r\n      NewConfirmed: 4933,\r\n      TotalConfirmed: 96092,\r\n      NewDeaths: 169,\r\n      TotalDeaths: 1444,\r\n      NewRecovered: 1825,\r\n      TotalRecovered: 26400,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Ghana\",\r\n      CountryCode: \"GH\",\r\n      Slug: \"ghana\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 205,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 5,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 31,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Gibraltar\",\r\n      CountryCode: \"GI\",\r\n      Slug: \"gibraltar\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Greece\",\r\n      CountryCode: \"GR\",\r\n      Slug: \"greece\",\r\n      NewConfirmed: 60,\r\n      TotalConfirmed: 1673,\r\n      NewDeaths: 5,\r\n      TotalDeaths: 68,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 78,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Greenland\",\r\n      CountryCode: \"GL\",\r\n      Slug: \"greenland\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Grenada\",\r\n      CountryCode: \"GD\",\r\n      Slug: \"grenada\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 12,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Guadeloupe\",\r\n      CountryCode: \"GP\",\r\n      Slug: \"guadeloupe\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Guam\",\r\n      CountryCode: \"GU\",\r\n      Slug: \"guam\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Guatemala\",\r\n      CountryCode: \"GT\",\r\n      Slug: \"guatemala\",\r\n      NewConfirmed: 11,\r\n      TotalConfirmed: 61,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 2,\r\n      NewRecovered: 3,\r\n      TotalRecovered: 15,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Guernsey\",\r\n      CountryCode: \"GG\",\r\n      Slug: \"guernsey\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Guinea\",\r\n      CountryCode: \"GN\",\r\n      Slug: \"guinea\",\r\n      NewConfirmed: 38,\r\n      TotalConfirmed: 111,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 3,\r\n      TotalRecovered: 5,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Guinea-Bissau\",\r\n      CountryCode: \"GW\",\r\n      Slug: \"guinea-bissau\",\r\n      NewConfirmed: 3,\r\n      TotalConfirmed: 18,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Guyana\",\r\n      CountryCode: \"GY\",\r\n      Slug: \"guyana\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 23,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 4,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Haiti\",\r\n      CountryCode: \"HT\",\r\n      Slug: \"haiti\",\r\n      NewConfirmed: 2,\r\n      TotalConfirmed: 20,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 1,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Heard and Mcdonald Islands\",\r\n      CountryCode: \"HM\",\r\n      Slug: \"heard-and-mcdonald-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Holy See (Vatican City State)\",\r\n      CountryCode: \"VA\",\r\n      Slug: \"holy-see-vatican-city-state\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 7,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Honduras\",\r\n      CountryCode: \"HN\",\r\n      Slug: \"honduras\",\r\n      NewConfirmed: 42,\r\n      TotalConfirmed: 264,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 15,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 3,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Hong Kong, SAR China\",\r\n      CountryCode: \"HK\",\r\n      Slug: \"hong-kong-sar-china\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Hungary\",\r\n      CountryCode: \"HU\",\r\n      Slug: \"hungary\",\r\n      NewConfirmed: 55,\r\n      TotalConfirmed: 678,\r\n      NewDeaths: 6,\r\n      TotalDeaths: 32,\r\n      NewRecovered: 15,\r\n      TotalRecovered: 58,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Iceland\",\r\n      CountryCode: \"IS\",\r\n      Slug: \"iceland\",\r\n      NewConfirmed: 53,\r\n      TotalConfirmed: 1417,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 4,\r\n      NewRecovered: 87,\r\n      TotalRecovered: 396,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"India\",\r\n      CountryCode: \"IN\",\r\n      Slug: \"india\",\r\n      NewConfirmed: 515,\r\n      TotalConfirmed: 3082,\r\n      NewDeaths: 14,\r\n      TotalDeaths: 86,\r\n      NewRecovered: 37,\r\n      TotalRecovered: 229,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Indonesia\",\r\n      CountryCode: \"ID\",\r\n      Slug: \"indonesia\",\r\n      NewConfirmed: 106,\r\n      TotalConfirmed: 2092,\r\n      NewDeaths: 10,\r\n      TotalDeaths: 191,\r\n      NewRecovered: 16,\r\n      TotalRecovered: 150,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Iran, Islamic Republic of\",\r\n      CountryCode: \"IR\",\r\n      Slug: \"iran\",\r\n      NewConfirmed: 2560,\r\n      TotalConfirmed: 55743,\r\n      NewDeaths: 158,\r\n      TotalDeaths: 3452,\r\n      NewRecovered: 1801,\r\n      TotalRecovered: 19736,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Iraq\",\r\n      CountryCode: \"IQ\",\r\n      Slug: \"iraq\",\r\n      NewConfirmed: 58,\r\n      TotalConfirmed: 878,\r\n      NewDeaths: 2,\r\n      TotalDeaths: 56,\r\n      NewRecovered: 33,\r\n      TotalRecovered: 259,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Ireland\",\r\n      CountryCode: \"IE\",\r\n      Slug: \"ireland\",\r\n      NewConfirmed: 331,\r\n      TotalConfirmed: 4604,\r\n      NewDeaths: 17,\r\n      TotalDeaths: 137,\r\n      NewRecovered: 20,\r\n      TotalRecovered: 25,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Isle of Man\",\r\n      CountryCode: \"IM\",\r\n      Slug: \"isle-of-man\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Israel\",\r\n      CountryCode: \"IL\",\r\n      Slug: \"israel\",\r\n      NewConfirmed: 423,\r\n      TotalConfirmed: 7851,\r\n      NewDeaths: 4,\r\n      TotalDeaths: 44,\r\n      NewRecovered: 24,\r\n      TotalRecovered: 427,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Italy\",\r\n      CountryCode: \"IT\",\r\n      Slug: \"italy\",\r\n      NewConfirmed: 4805,\r\n      TotalConfirmed: 124632,\r\n      NewDeaths: 681,\r\n      TotalDeaths: 15362,\r\n      NewRecovered: 1238,\r\n      TotalRecovered: 20996,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Jamaica\",\r\n      CountryCode: \"JM\",\r\n      Slug: \"jamaica\",\r\n      NewConfirmed: 6,\r\n      TotalConfirmed: 53,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 3,\r\n      NewRecovered: 5,\r\n      TotalRecovered: 7,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Japan\",\r\n      CountryCode: \"JP\",\r\n      Slug: \"japan\",\r\n      NewConfirmed: 522,\r\n      TotalConfirmed: 3139,\r\n      NewDeaths: 14,\r\n      TotalDeaths: 77,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 514,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Jersey\",\r\n      CountryCode: \"JE\",\r\n      Slug: \"jersey\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Jordan\",\r\n      CountryCode: \"JO\",\r\n      Slug: \"jordan\",\r\n      NewConfirmed: 13,\r\n      TotalConfirmed: 323,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 5,\r\n      NewRecovered: 16,\r\n      TotalRecovered: 74,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Kenya\",\r\n      CountryCode: \"KE\",\r\n      Slug: \"kenya\",\r\n      NewConfirmed: 4,\r\n      TotalConfirmed: 126,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 4,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 4,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Kiribati\",\r\n      CountryCode: \"KI\",\r\n      Slug: \"kiribati\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Korea (North)\",\r\n      CountryCode: \"KP\",\r\n      Slug: \"korea-north\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Korea (South)\",\r\n      CountryCode: \"KR\",\r\n      Slug: \"korea-south\",\r\n      NewConfirmed: 94,\r\n      TotalConfirmed: 10156,\r\n      NewDeaths: 3,\r\n      TotalDeaths: 177,\r\n      NewRecovered: 304,\r\n      TotalRecovered: 6325,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Kuwait\",\r\n      CountryCode: \"KW\",\r\n      Slug: \"kuwait\",\r\n      NewConfirmed: 62,\r\n      TotalConfirmed: 479,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 11,\r\n      TotalRecovered: 93,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Kyrgyzstan\",\r\n      CountryCode: \"KG\",\r\n      Slug: \"kyrgyzstan\",\r\n      NewConfirmed: 14,\r\n      TotalConfirmed: 144,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 3,\r\n      TotalRecovered: 9,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Lao PDR\",\r\n      CountryCode: \"LA\",\r\n      Slug: \"lao-pdr\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 10,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Latvia\",\r\n      CountryCode: \"LV\",\r\n      Slug: \"latvia\",\r\n      NewConfirmed: 16,\r\n      TotalConfirmed: 509,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 1,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Lebanon\",\r\n      CountryCode: \"LB\",\r\n      Slug: \"lebanon\",\r\n      NewConfirmed: 12,\r\n      TotalConfirmed: 520,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 17,\r\n      NewRecovered: 4,\r\n      TotalRecovered: 54,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Lesotho\",\r\n      CountryCode: \"LS\",\r\n      Slug: \"lesotho\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Liberia\",\r\n      CountryCode: \"LR\",\r\n      Slug: \"liberia\",\r\n      NewConfirmed: 3,\r\n      TotalConfirmed: 10,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 3,\r\n      TotalRecovered: 3,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Libya\",\r\n      CountryCode: \"LY\",\r\n      Slug: \"libya\",\r\n      NewConfirmed: 7,\r\n      TotalConfirmed: 18,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Liechtenstein\",\r\n      CountryCode: \"LI\",\r\n      Slug: \"liechtenstein\",\r\n      NewConfirmed: 2,\r\n      TotalConfirmed: 77,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Lithuania\",\r\n      CountryCode: \"LT\",\r\n      Slug: \"lithuania\",\r\n      NewConfirmed: 75,\r\n      TotalConfirmed: 771,\r\n      NewDeaths: 2,\r\n      TotalDeaths: 11,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 7,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Luxembourg\",\r\n      CountryCode: \"LU\",\r\n      Slug: \"luxembourg\",\r\n      NewConfirmed: 117,\r\n      TotalConfirmed: 2729,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 31,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 500,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Macao, SAR China\",\r\n      CountryCode: \"MO\",\r\n      Slug: \"macao-sar-china\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Macedonia, Republic of\",\r\n      CountryCode: \"MK\",\r\n      Slug: \"macedonia\",\r\n      NewConfirmed: 53,\r\n      TotalConfirmed: 483,\r\n      NewDeaths: 5,\r\n      TotalDeaths: 17,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 20,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Madagascar\",\r\n      CountryCode: \"MG\",\r\n      Slug: \"madagascar\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 70,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Malawi\",\r\n      CountryCode: \"MW\",\r\n      Slug: \"malawi\",\r\n      NewConfirmed: 1,\r\n      TotalConfirmed: 4,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Malaysia\",\r\n      CountryCode: \"MY\",\r\n      Slug: \"malaysia\",\r\n      NewConfirmed: 150,\r\n      TotalConfirmed: 3483,\r\n      NewDeaths: 4,\r\n      TotalDeaths: 57,\r\n      NewRecovered: 88,\r\n      TotalRecovered: 915,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Maldives\",\r\n      CountryCode: \"MV\",\r\n      Slug: \"maldives\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 19,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 13,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Mali\",\r\n      CountryCode: \"ML\",\r\n      Slug: \"mali\",\r\n      NewConfirmed: 2,\r\n      TotalConfirmed: 41,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 3,\r\n      NewRecovered: 1,\r\n      TotalRecovered: 1,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Malta\",\r\n      CountryCode: \"MT\",\r\n      Slug: \"malta\",\r\n      NewConfirmed: 11,\r\n      TotalConfirmed: 213,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 2,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Marshall Islands\",\r\n      CountryCode: \"MH\",\r\n      Slug: \"marshall-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Martinique\",\r\n      CountryCode: \"MQ\",\r\n      Slug: \"martinique\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Mauritania\",\r\n      CountryCode: \"MR\",\r\n      Slug: \"mauritania\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 6,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 2,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Mauritius\",\r\n      CountryCode: \"MU\",\r\n      Slug: \"mauritius\",\r\n      NewConfirmed: 10,\r\n      TotalConfirmed: 196,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 7,\r\n      NewRecovered: 7,\r\n      TotalRecovered: 7,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Mayotte\",\r\n      CountryCode: \"YT\",\r\n      Slug: \"mayotte\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Mexico\",\r\n      CountryCode: \"MX\",\r\n      Slug: \"mexico\",\r\n      NewConfirmed: 178,\r\n      TotalConfirmed: 1688,\r\n      NewDeaths: 10,\r\n      TotalDeaths: 60,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 633,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Micronesia, Federated States of\",\r\n      CountryCode: \"FM\",\r\n      Slug: \"micronesia\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Moldova\",\r\n      CountryCode: \"MD\",\r\n      Slug: \"moldova\",\r\n      NewConfirmed: 161,\r\n      TotalConfirmed: 752,\r\n      NewDeaths: 4,\r\n      TotalDeaths: 12,\r\n      NewRecovered: 3,\r\n      TotalRecovered: 29,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Monaco\",\r\n      CountryCode: \"MC\",\r\n      Slug: \"monaco\",\r\n      NewConfirmed: 2,\r\n      TotalConfirmed: 66,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 3,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Mongolia\",\r\n      CountryCode: \"MN\",\r\n      Slug: \"mongolia\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 14,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 2,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Montenegro\",\r\n      CountryCode: \"ME\",\r\n      Slug: \"montenegro\",\r\n      NewConfirmed: 27,\r\n      TotalConfirmed: 201,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 2,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 1,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Montserrat\",\r\n      CountryCode: \"MS\",\r\n      Slug: \"montserrat\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Morocco\",\r\n      CountryCode: \"MA\",\r\n      Slug: \"morocco\",\r\n      NewConfirmed: 128,\r\n      TotalConfirmed: 919,\r\n      NewDeaths: 11,\r\n      TotalDeaths: 59,\r\n      NewRecovered: 9,\r\n      TotalRecovered: 66,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Mozambique\",\r\n      CountryCode: \"MZ\",\r\n      Slug: \"mozambique\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 10,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 1,\r\n      TotalRecovered: 1,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Myanmar\",\r\n      CountryCode: \"MM\",\r\n      Slug: \"myanmar\",\r\n      NewConfirmed: 1,\r\n      TotalConfirmed: 21,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Namibia\",\r\n      CountryCode: \"NA\",\r\n      Slug: \"namibia\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 14,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 3,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Nauru\",\r\n      CountryCode: \"NR\",\r\n      Slug: \"nauru\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Nepal\",\r\n      CountryCode: \"NP\",\r\n      Slug: \"nepal\",\r\n      NewConfirmed: 3,\r\n      TotalConfirmed: 9,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 1,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Netherlands\",\r\n      CountryCode: \"NL\",\r\n      Slug: \"netherlands\",\r\n      NewConfirmed: 906,\r\n      TotalConfirmed: 16727,\r\n      NewDeaths: 166,\r\n      TotalDeaths: 1656,\r\n      NewRecovered: 2,\r\n      TotalRecovered: 262,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Netherlands Antilles\",\r\n      CountryCode: \"AN\",\r\n      Slug: \"netherlands-antilles\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"New Caledonia\",\r\n      CountryCode: \"NC\",\r\n      Slug: \"new-caledonia\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"New Zealand\",\r\n      CountryCode: \"NZ\",\r\n      Slug: \"new-zealand\",\r\n      NewConfirmed: 82,\r\n      TotalConfirmed: 950,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 24,\r\n      TotalRecovered: 127,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Nicaragua\",\r\n      CountryCode: \"NI\",\r\n      Slug: \"nicaragua\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 5,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Niger\",\r\n      CountryCode: \"NE\",\r\n      Slug: \"niger\",\r\n      NewConfirmed: 24,\r\n      TotalConfirmed: 144,\r\n      NewDeaths: 3,\r\n      TotalDeaths: 8,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Nigeria\",\r\n      CountryCode: \"NG\",\r\n      Slug: \"nigeria\",\r\n      NewConfirmed: 4,\r\n      TotalConfirmed: 214,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 4,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 25,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Niue\",\r\n      CountryCode: \"NU\",\r\n      Slug: \"niue\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Norfolk Island\",\r\n      CountryCode: \"NF\",\r\n      Slug: \"norfolk-island\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Northern Mariana Islands\",\r\n      CountryCode: \"MP\",\r\n      Slug: \"northern-mariana-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Norway\",\r\n      CountryCode: \"NO\",\r\n      Slug: \"norway\",\r\n      NewConfirmed: 180,\r\n      TotalConfirmed: 5550,\r\n      NewDeaths: 3,\r\n      TotalDeaths: 62,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 32,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Oman\",\r\n      CountryCode: \"OM\",\r\n      Slug: \"oman\",\r\n      NewConfirmed: 25,\r\n      TotalConfirmed: 277,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 2,\r\n      NewRecovered: 4,\r\n      TotalRecovered: 61,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Pakistan\",\r\n      CountryCode: \"PK\",\r\n      Slug: \"pakistan\",\r\n      NewConfirmed: 132,\r\n      TotalConfirmed: 2818,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 41,\r\n      NewRecovered: 5,\r\n      TotalRecovered: 131,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Palau\",\r\n      CountryCode: \"PW\",\r\n      Slug: \"palau\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Palestinian Territory\",\r\n      CountryCode: \"PS\",\r\n      Slug: \"palestine\",\r\n      NewConfirmed: 23,\r\n      TotalConfirmed: 217,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 21,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Panama\",\r\n      CountryCode: \"PA\",\r\n      Slug: \"panama\",\r\n      NewConfirmed: 198,\r\n      TotalConfirmed: 1673,\r\n      NewDeaths: 4,\r\n      TotalDeaths: 41,\r\n      NewRecovered: 3,\r\n      TotalRecovered: 13,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Papua New Guinea\",\r\n      CountryCode: \"PG\",\r\n      Slug: \"papua-new-guinea\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 1,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Paraguay\",\r\n      CountryCode: \"PY\",\r\n      Slug: \"paraguay\",\r\n      NewConfirmed: 4,\r\n      TotalConfirmed: 96,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 3,\r\n      NewRecovered: 6,\r\n      TotalRecovered: 12,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Peru\",\r\n      CountryCode: \"PE\",\r\n      Slug: \"peru\",\r\n      NewConfirmed: 151,\r\n      TotalConfirmed: 1746,\r\n      NewDeaths: 12,\r\n      TotalDeaths: 73,\r\n      NewRecovered: 377,\r\n      TotalRecovered: 914,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Philippines\",\r\n      CountryCode: \"PH\",\r\n      Slug: \"philippines\",\r\n      NewConfirmed: 76,\r\n      TotalConfirmed: 3094,\r\n      NewDeaths: 8,\r\n      TotalDeaths: 144,\r\n      NewRecovered: 5,\r\n      TotalRecovered: 57,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Pitcairn\",\r\n      CountryCode: \"PN\",\r\n      Slug: \"pitcairn\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Poland\",\r\n      CountryCode: \"PL\",\r\n      Slug: \"poland\",\r\n      NewConfirmed: 244,\r\n      TotalConfirmed: 3627,\r\n      NewDeaths: 8,\r\n      TotalDeaths: 79,\r\n      NewRecovered: 60,\r\n      TotalRecovered: 116,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Portugal\",\r\n      CountryCode: \"PT\",\r\n      Slug: \"portugal\",\r\n      NewConfirmed: 638,\r\n      TotalConfirmed: 10524,\r\n      NewDeaths: 20,\r\n      TotalDeaths: 266,\r\n      NewRecovered: 7,\r\n      TotalRecovered: 75,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Puerto Rico\",\r\n      CountryCode: \"PR\",\r\n      Slug: \"puerto-rico\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Qatar\",\r\n      CountryCode: \"QA\",\r\n      Slug: \"qatar\",\r\n      NewConfirmed: 250,\r\n      TotalConfirmed: 1325,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 3,\r\n      NewRecovered: 16,\r\n      TotalRecovered: 109,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Republic of Kosovo\",\r\n      CountryCode: \"XK\",\r\n      Slug: \"kosovo\",\r\n      NewConfirmed: 9,\r\n      TotalConfirmed: 135,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 6,\r\n      TotalRecovered: 16,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Romania\",\r\n      CountryCode: \"RO\",\r\n      Slug: \"romania\",\r\n      NewConfirmed: 430,\r\n      TotalConfirmed: 3613,\r\n      NewDeaths: 13,\r\n      TotalDeaths: 146,\r\n      NewRecovered: 46,\r\n      TotalRecovered: 329,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Russian Federation\",\r\n      CountryCode: \"RU\",\r\n      Slug: \"russia\",\r\n      NewConfirmed: 582,\r\n      TotalConfirmed: 4731,\r\n      NewDeaths: 9,\r\n      TotalDeaths: 43,\r\n      NewRecovered: 52,\r\n      TotalRecovered: 333,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Rwanda\",\r\n      CountryCode: \"RW\",\r\n      Slug: \"rwanda\",\r\n      NewConfirmed: 13,\r\n      TotalConfirmed: 102,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Réunion\",\r\n      CountryCode: \"RE\",\r\n      Slug: \"réunion\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Saint Helena\",\r\n      CountryCode: \"SH\",\r\n      Slug: \"saint-helena\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Saint Kitts and Nevis\",\r\n      CountryCode: \"KN\",\r\n      Slug: \"saint-kitts-and-nevis\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 9,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Saint Lucia\",\r\n      CountryCode: \"LC\",\r\n      Slug: \"saint-lucia\",\r\n      NewConfirmed: 1,\r\n      TotalConfirmed: 14,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 1,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Saint Pierre and Miquelon\",\r\n      CountryCode: \"PM\",\r\n      Slug: \"saint-pierre-and-miquelon\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Saint Vincent and Grenadines\",\r\n      CountryCode: \"VC\",\r\n      Slug: \"saint-vincent-and-the-grenadines\",\r\n      NewConfirmed: 4,\r\n      TotalConfirmed: 7,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 1,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Saint-Barthélemy\",\r\n      CountryCode: \"BL\",\r\n      Slug: \"saint-barthélemy\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Saint-Martin (French part)\",\r\n      CountryCode: \"MF\",\r\n      Slug: \"saint-martin-french-part\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Samoa\",\r\n      CountryCode: \"WS\",\r\n      Slug: \"samoa\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"San Marino\",\r\n      CountryCode: \"SM\",\r\n      Slug: \"san-marino\",\r\n      NewConfirmed: 14,\r\n      TotalConfirmed: 259,\r\n      NewDeaths: 2,\r\n      TotalDeaths: 32,\r\n      NewRecovered: 6,\r\n      TotalRecovered: 27,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Sao Tome and Principe\",\r\n      CountryCode: \"ST\",\r\n      Slug: \"sao-tome-and-principe\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Saudi Arabia\",\r\n      CountryCode: \"SA\",\r\n      Slug: \"saudi-arabia\",\r\n      NewConfirmed: 140,\r\n      TotalConfirmed: 2179,\r\n      NewDeaths: 4,\r\n      TotalDeaths: 29,\r\n      NewRecovered: 69,\r\n      TotalRecovered: 420,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Senegal\",\r\n      CountryCode: \"SN\",\r\n      Slug: \"senegal\",\r\n      NewConfirmed: 12,\r\n      TotalConfirmed: 219,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 2,\r\n      NewRecovered: 6,\r\n      TotalRecovered: 72,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Serbia\",\r\n      CountryCode: \"RS\",\r\n      Slug: \"serbia\",\r\n      NewConfirmed: 148,\r\n      TotalConfirmed: 1624,\r\n      NewDeaths: 5,\r\n      TotalDeaths: 44,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Seychelles\",\r\n      CountryCode: \"SC\",\r\n      Slug: \"seychelles\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 10,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Sierra Leone\",\r\n      CountryCode: \"SL\",\r\n      Slug: \"sierra-leone\",\r\n      NewConfirmed: 2,\r\n      TotalConfirmed: 4,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Singapore\",\r\n      CountryCode: \"SG\",\r\n      Slug: \"singapore\",\r\n      NewConfirmed: 75,\r\n      TotalConfirmed: 1189,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 6,\r\n      NewRecovered: 15,\r\n      TotalRecovered: 297,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Slovakia\",\r\n      CountryCode: \"SK\",\r\n      Slug: \"slovakia\",\r\n      NewConfirmed: 21,\r\n      TotalConfirmed: 471,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 10,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Slovenia\",\r\n      CountryCode: \"SI\",\r\n      Slug: \"slovenia\",\r\n      NewConfirmed: 43,\r\n      TotalConfirmed: 977,\r\n      NewDeaths: 2,\r\n      TotalDeaths: 22,\r\n      NewRecovered: 9,\r\n      TotalRecovered: 79,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Solomon Islands\",\r\n      CountryCode: \"SB\",\r\n      Slug: \"solomon-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Somalia\",\r\n      CountryCode: \"SO\",\r\n      Slug: \"somalia\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 7,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 1,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"South Africa\",\r\n      CountryCode: \"ZA\",\r\n      Slug: \"south-africa\",\r\n      NewConfirmed: 80,\r\n      TotalConfirmed: 1585,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 9,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 95,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"South Georgia and the South Sandwich Islands\",\r\n      CountryCode: \"GS\",\r\n      Slug: \"south-georgia-and-the-south-sandwich-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"South Sudan\",\r\n      CountryCode: \"SS\",\r\n      Slug: \"south-sudan\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Spain\",\r\n      CountryCode: \"ES\",\r\n      Slug: \"spain\",\r\n      NewConfirmed: 6969,\r\n      TotalConfirmed: 126168,\r\n      NewDeaths: 749,\r\n      TotalDeaths: 11947,\r\n      NewRecovered: 3706,\r\n      TotalRecovered: 34219,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Sri Lanka\",\r\n      CountryCode: \"LK\",\r\n      Slug: \"sri-lanka\",\r\n      NewConfirmed: 7,\r\n      TotalConfirmed: 166,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 5,\r\n      NewRecovered: 3,\r\n      TotalRecovered: 27,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Sudan\",\r\n      CountryCode: \"SD\",\r\n      Slug: \"sudan\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 10,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 2,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 2,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Suriname\",\r\n      CountryCode: \"SR\",\r\n      Slug: \"suriname\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 10,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Svalbard and Jan Mayen Islands\",\r\n      CountryCode: \"SJ\",\r\n      Slug: \"svalbard-and-jan-mayen-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Swaziland\",\r\n      CountryCode: \"SZ\",\r\n      Slug: \"swaziland\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 9,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Sweden\",\r\n      CountryCode: \"SE\",\r\n      Slug: \"sweden\",\r\n      NewConfirmed: 312,\r\n      TotalConfirmed: 6443,\r\n      NewDeaths: 15,\r\n      TotalDeaths: 373,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 205,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Switzerland\",\r\n      CountryCode: \"CH\",\r\n      Slug: \"switzerland\",\r\n      NewConfirmed: 899,\r\n      TotalConfirmed: 20505,\r\n      NewDeaths: 75,\r\n      TotalDeaths: 666,\r\n      NewRecovered: 1569,\r\n      TotalRecovered: 6415,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Syrian Arab Republic (Syria)\",\r\n      CountryCode: \"SY\",\r\n      Slug: \"syria\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 16,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 2,\r\n      NewRecovered: 2,\r\n      TotalRecovered: 2,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Taiwan, Republic of China\",\r\n      CountryCode: \"TW\",\r\n      Slug: \"taiwan\",\r\n      NewConfirmed: 7,\r\n      TotalConfirmed: 355,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 5,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 50,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Tajikistan\",\r\n      CountryCode: \"TJ\",\r\n      Slug: \"tajikistan\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Tanzania, United Republic of\",\r\n      CountryCode: \"TZ\",\r\n      Slug: \"tanzania\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 20,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 3,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Thailand\",\r\n      CountryCode: \"TH\",\r\n      Slug: \"thailand\",\r\n      NewConfirmed: 89,\r\n      TotalConfirmed: 2067,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 20,\r\n      NewRecovered: 62,\r\n      TotalRecovered: 674,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Timor-Leste\",\r\n      CountryCode: \"TL\",\r\n      Slug: \"timor-leste\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 1,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Togo\",\r\n      CountryCode: \"TG\",\r\n      Slug: \"togo\",\r\n      NewConfirmed: 1,\r\n      TotalConfirmed: 41,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 3,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 17,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Tokelau\",\r\n      CountryCode: \"TK\",\r\n      Slug: \"tokelau\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Tonga\",\r\n      CountryCode: \"TO\",\r\n      Slug: \"tonga\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Trinidad and Tobago\",\r\n      CountryCode: \"TT\",\r\n      Slug: \"trinidad-and-tobago\",\r\n      NewConfirmed: 5,\r\n      TotalConfirmed: 103,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 6,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 1,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Tunisia\",\r\n      CountryCode: \"TN\",\r\n      Slug: \"tunisia\",\r\n      NewConfirmed: 58,\r\n      TotalConfirmed: 553,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 18,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 5,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Turkey\",\r\n      CountryCode: \"TR\",\r\n      Slug: \"turkey\",\r\n      NewConfirmed: 3013,\r\n      TotalConfirmed: 23934,\r\n      NewDeaths: 76,\r\n      TotalDeaths: 501,\r\n      NewRecovered: 302,\r\n      TotalRecovered: 786,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Turkmenistan\",\r\n      CountryCode: \"TM\",\r\n      Slug: \"turkmenistan\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Turks and Caicos Islands\",\r\n      CountryCode: \"TC\",\r\n      Slug: \"turks-and-caicos-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Tuvalu\",\r\n      CountryCode: \"TV\",\r\n      Slug: \"tuvalu\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"US Minor Outlying Islands\",\r\n      CountryCode: \"UM\",\r\n      Slug: \"us-minor-outlying-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Uganda\",\r\n      CountryCode: \"UG\",\r\n      Slug: \"uganda\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 48,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Ukraine\",\r\n      CountryCode: \"UA\",\r\n      Slug: \"ukraine\",\r\n      NewConfirmed: 153,\r\n      TotalConfirmed: 1225,\r\n      NewDeaths: 5,\r\n      TotalDeaths: 32,\r\n      NewRecovered: 3,\r\n      TotalRecovered: 25,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"United Arab Emirates\",\r\n      CountryCode: \"AE\",\r\n      Slug: \"united-arab-emirates\",\r\n      NewConfirmed: 241,\r\n      TotalConfirmed: 1505,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 10,\r\n      NewRecovered: 17,\r\n      TotalRecovered: 125,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"United Kingdom\",\r\n      CountryCode: \"GB\",\r\n      Slug: \"united-kingdom\",\r\n      NewConfirmed: 3788,\r\n      TotalConfirmed: 42477,\r\n      NewDeaths: 709,\r\n      TotalDeaths: 4320,\r\n      NewRecovered: 7,\r\n      TotalRecovered: 215,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"United States of America\",\r\n      CountryCode: \"US\",\r\n      Slug: \"united-states\",\r\n      NewConfirmed: 32129,\r\n      TotalConfirmed: 275582,\r\n      NewDeaths: 1161,\r\n      TotalDeaths: 7087,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Uruguay\",\r\n      CountryCode: \"UY\",\r\n      Slug: \"uruguay\",\r\n      NewConfirmed: 31,\r\n      TotalConfirmed: 400,\r\n      NewDeaths: 1,\r\n      TotalDeaths: 5,\r\n      NewRecovered: 25,\r\n      TotalRecovered: 93,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Uzbekistan\",\r\n      CountryCode: \"UZ\",\r\n      Slug: \"uzbekistan\",\r\n      NewConfirmed: 39,\r\n      TotalConfirmed: 266,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 2,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 25,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Vanuatu\",\r\n      CountryCode: \"VU\",\r\n      Slug: \"vanuatu\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Venezuela (Bolivarian Republic)\",\r\n      CountryCode: \"VE\",\r\n      Slug: \"venezuela\",\r\n      NewConfirmed: 2,\r\n      TotalConfirmed: 155,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 7,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 52,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Viet Nam\",\r\n      CountryCode: \"VN\",\r\n      Slug: \"vietnam\",\r\n      NewConfirmed: 3,\r\n      TotalConfirmed: 240,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 5,\r\n      TotalRecovered: 90,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Virgin Islands, US\",\r\n      CountryCode: \"VI\",\r\n      Slug: \"virgin-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Wallis and Futuna Islands\",\r\n      CountryCode: \"WF\",\r\n      Slug: \"wallis-and-futuna-islands\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Western Sahara\",\r\n      CountryCode: \"EH\",\r\n      Slug: \"western-sahara\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Yemen\",\r\n      CountryCode: \"YE\",\r\n      Slug: \"yemen\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 0,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 0,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Zambia\",\r\n      CountryCode: \"ZM\",\r\n      Slug: \"zambia\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 39,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 2,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n    {\r\n      Country: \"Zimbabwe\",\r\n      CountryCode: \"ZW\",\r\n      Slug: \"zimbabwe\",\r\n      NewConfirmed: 0,\r\n      TotalConfirmed: 9,\r\n      NewDeaths: 0,\r\n      TotalDeaths: 1,\r\n      NewRecovered: 0,\r\n      TotalRecovered: 0,\r\n      Date: \"2020-04-05T06:37:00Z\",\r\n    },\r\n  ],\r\n  Date: \"2020-04-05T06:37:00Z\",\r\n}\r\n\r\nexport const countries = {}\r\nfor (const country of data[\"Countries\"]) {\r\n  countries[country[\"Slug\"]] = country\r\n}\r\n\r\nexport const summary = data.Global\r\n","const countryISO = [\r\n  {\r\n    Country: \"Czech Republic\",\r\n    Slug: \"czech-republic\",\r\n    ISO2: \"CZ\",\r\n  },\r\n  {\r\n    Country: \"Macedonia, Republic of\",\r\n    Slug: \"macedonia\",\r\n    ISO2: \"MK\",\r\n  },\r\n  {\r\n    Country: \"Slovenia\",\r\n    Slug: \"slovenia\",\r\n    ISO2: \"SI\",\r\n  },\r\n  {\r\n    Country: \"Aruba\",\r\n    Slug: \"aruba\",\r\n    ISO2: \"AW\",\r\n  },\r\n  {\r\n    Country: \"Georgia\",\r\n    Slug: \"georgia\",\r\n    ISO2: \"GE\",\r\n  },\r\n  {\r\n    Country: \"Tuvalu\",\r\n    Slug: \"tuvalu\",\r\n    ISO2: \"TV\",\r\n  },\r\n  {\r\n    Country: \"Kazakhstan\",\r\n    Slug: \"kazakhstan\",\r\n    ISO2: \"KZ\",\r\n  },\r\n  {\r\n    Country: \"Papua New Guinea\",\r\n    Slug: \"papua-new-guinea\",\r\n    ISO2: \"PG\",\r\n  },\r\n  {\r\n    Country: \"Singapore\",\r\n    Slug: \"singapore\",\r\n    ISO2: \"SG\",\r\n  },\r\n  {\r\n    Country: \"Oman\",\r\n    Slug: \"oman\",\r\n    ISO2: \"OM\",\r\n  },\r\n  {\r\n    Country: \"Burundi\",\r\n    Slug: \"burundi\",\r\n    ISO2: \"BI\",\r\n  },\r\n  {\r\n    Country: \"Djibouti\",\r\n    Slug: \"djibouti\",\r\n    ISO2: \"DJ\",\r\n  },\r\n  {\r\n    Country: \"Luxembourg\",\r\n    Slug: \"luxembourg\",\r\n    ISO2: \"LU\",\r\n  },\r\n  {\r\n    Country: \"Netherlands\",\r\n    Slug: \"netherlands\",\r\n    ISO2: \"NL\",\r\n  },\r\n  {\r\n    Country: \"New Zealand\",\r\n    Slug: \"new-zealand\",\r\n    ISO2: \"NZ\",\r\n  },\r\n  {\r\n    Country: \"Falkland Islands (Malvinas)\",\r\n    Slug: \"falkland-islands-malvinas\",\r\n    ISO2: \"FK\",\r\n  },\r\n  {\r\n    Country: \"Finland\",\r\n    Slug: \"finland\",\r\n    ISO2: \"FI\",\r\n  },\r\n  {\r\n    Country: \"Greenland\",\r\n    Slug: \"greenland\",\r\n    ISO2: \"GL\",\r\n  },\r\n  {\r\n    Country: \"Rwanda\",\r\n    Slug: \"rwanda\",\r\n    ISO2: \"RW\",\r\n  },\r\n  {\r\n    Country: \"Botswana\",\r\n    Slug: \"botswana\",\r\n    ISO2: \"BW\",\r\n  },\r\n  {\r\n    Country: \"Nepal\",\r\n    Slug: \"nepal\",\r\n    ISO2: \"NP\",\r\n  },\r\n  {\r\n    Country: \"Saint Vincent and Grenadines\",\r\n    Slug: \"saint-vincent-and-the-grenadines\",\r\n    ISO2: \"VC\",\r\n  },\r\n  {\r\n    Country: \"United States of America\",\r\n    Slug: \"united-states\",\r\n    ISO2: \"US\",\r\n  },\r\n  {\r\n    Country: \"Saudi Arabia\",\r\n    Slug: \"saudi-arabia\",\r\n    ISO2: \"SA\",\r\n  },\r\n  {\r\n    Country: \"Bahamas\",\r\n    Slug: \"bahamas\",\r\n    ISO2: \"BS\",\r\n  },\r\n  {\r\n    Country: \"Panama\",\r\n    Slug: \"panama\",\r\n    ISO2: \"PA\",\r\n  },\r\n  {\r\n    Country: \"Tanzania, United Republic of\",\r\n    Slug: \"tanzania\",\r\n    ISO2: \"TZ\",\r\n  },\r\n  {\r\n    Country: \"Vanuatu\",\r\n    Slug: \"vanuatu\",\r\n    ISO2: \"VU\",\r\n  },\r\n  {\r\n    Country: \"Haiti\",\r\n    Slug: \"haiti\",\r\n    ISO2: \"HT\",\r\n  },\r\n  {\r\n    Country: \"Latvia\",\r\n    Slug: \"latvia\",\r\n    ISO2: \"LV\",\r\n  },\r\n  {\r\n    Country: \"Afghanistan\",\r\n    Slug: \"afghanistan\",\r\n    ISO2: \"AF\",\r\n  },\r\n  {\r\n    Country: \"Anguilla\",\r\n    Slug: \"anguilla\",\r\n    ISO2: \"AI\",\r\n  },\r\n  {\r\n    Country: \"Gabon\",\r\n    Slug: \"gabon\",\r\n    ISO2: \"GA\",\r\n  },\r\n  {\r\n    Country: \"Russian Federation\",\r\n    Slug: \"russia\",\r\n    ISO2: \"RU\",\r\n  },\r\n  {\r\n    Country: \"Sao Tome and Principe\",\r\n    Slug: \"sao-tome-and-principe\",\r\n    ISO2: \"ST\",\r\n  },\r\n  {\r\n    Country: \"Fiji\",\r\n    Slug: \"fiji\",\r\n    ISO2: \"FJ\",\r\n  },\r\n  {\r\n    Country: \"Holy See (Vatican City State)\",\r\n    Slug: \"holy-see-vatican-city-state\",\r\n    ISO2: \"VA\",\r\n  },\r\n  {\r\n    Country: \"India\",\r\n    Slug: \"india\",\r\n    ISO2: \"IN\",\r\n  },\r\n  {\r\n    Country: \"Palau\",\r\n    Slug: \"palau\",\r\n    ISO2: \"PW\",\r\n  },\r\n  {\r\n    Country: \"Lithuania\",\r\n    Slug: \"lithuania\",\r\n    ISO2: \"LT\",\r\n  },\r\n  {\r\n    Country: \"Malawi\",\r\n    Slug: \"malawi\",\r\n    ISO2: \"MW\",\r\n  },\r\n  {\r\n    Country: \"Argentina\",\r\n    Slug: \"argentina\",\r\n    ISO2: \"AR\",\r\n  },\r\n  {\r\n    Country: \"Bouvet Island\",\r\n    Slug: \"bouvet-island\",\r\n    ISO2: \"BV\",\r\n  },\r\n  {\r\n    Country: \"British Indian Ocean Territory\",\r\n    Slug: \"british-indian-ocean-territory\",\r\n    ISO2: \"IO\",\r\n  },\r\n  {\r\n    Country: \"Grenada\",\r\n    Slug: \"grenada\",\r\n    ISO2: \"GD\",\r\n  },\r\n  {\r\n    Country: \"Guatemala\",\r\n    Slug: \"guatemala\",\r\n    ISO2: \"GT\",\r\n  },\r\n  {\r\n    Country: \"Norway\",\r\n    Slug: \"norway\",\r\n    ISO2: \"NO\",\r\n  },\r\n  {\r\n    Country: \"Sweden\",\r\n    Slug: \"sweden\",\r\n    ISO2: \"SE\",\r\n  },\r\n  {\r\n    Country: \"Wallis and Futuna Islands\",\r\n    Slug: \"wallis-and-futuna-islands\",\r\n    ISO2: \"WF\",\r\n  },\r\n  {\r\n    Country: \"Barbados\",\r\n    Slug: \"barbados\",\r\n    ISO2: \"BB\",\r\n  },\r\n  {\r\n    Country: \"Dominican Republic\",\r\n    Slug: \"dominican-republic\",\r\n    ISO2: \"DO\",\r\n  },\r\n  {\r\n    Country: \"Equatorial Guinea\",\r\n    Slug: \"equatorial-guinea\",\r\n    ISO2: \"GQ\",\r\n  },\r\n  {\r\n    Country: \"Hungary\",\r\n    Slug: \"hungary\",\r\n    ISO2: \"HU\",\r\n  },\r\n  {\r\n    Country: \"Switzerland\",\r\n    Slug: \"switzerland\",\r\n    ISO2: \"CH\",\r\n  },\r\n  {\r\n    Country: \"Timor-Leste\",\r\n    Slug: \"timor-leste\",\r\n    ISO2: \"TL\",\r\n  },\r\n  {\r\n    Country: \"San Marino\",\r\n    Slug: \"san-marino\",\r\n    ISO2: \"SM\",\r\n  },\r\n  {\r\n    Country: \"Ethiopia\",\r\n    Slug: \"ethiopia\",\r\n    ISO2: \"ET\",\r\n  },\r\n  {\r\n    Country: \"Eritrea\",\r\n    Slug: \"eritrea\",\r\n    ISO2: \"ER\",\r\n  },\r\n  {\r\n    Country: \"Pakistan\",\r\n    Slug: \"pakistan\",\r\n    ISO2: \"PK\",\r\n  },\r\n  {\r\n    Country: \"Samoa\",\r\n    Slug: \"samoa\",\r\n    ISO2: \"WS\",\r\n  },\r\n  {\r\n    Country: \"Marshall Islands\",\r\n    Slug: \"marshall-islands\",\r\n    ISO2: \"MH\",\r\n  },\r\n  {\r\n    Country: \"Mongolia\",\r\n    Slug: \"mongolia\",\r\n    ISO2: \"MN\",\r\n  },\r\n  {\r\n    Country: \"Paraguay\",\r\n    Slug: \"paraguay\",\r\n    ISO2: \"PY\",\r\n  },\r\n  {\r\n    Country: \"Swaziland\",\r\n    Slug: \"swaziland\",\r\n    ISO2: \"SZ\",\r\n  },\r\n  {\r\n    Country: \"Republic of Kosovo\",\r\n    Slug: \"kosovo\",\r\n    ISO2: \"XK\",\r\n  },\r\n  {\r\n    Country: \"Tunisia\",\r\n    Slug: \"tunisia\",\r\n    ISO2: \"TN\",\r\n  },\r\n  {\r\n    Country: \"Ecuador\",\r\n    Slug: \"ecuador\",\r\n    ISO2: \"EC\",\r\n  },\r\n  {\r\n    Country: \"Korea (North)\",\r\n    Slug: \"korea-north\",\r\n    ISO2: \"KP\",\r\n  },\r\n  {\r\n    Country: \"Netherlands Antilles\",\r\n    Slug: \"netherlands-antilles\",\r\n    ISO2: \"AN\",\r\n  },\r\n  {\r\n    Country: \"American Samoa\",\r\n    Slug: \"american-samoa\",\r\n    ISO2: \"AS\",\r\n  },\r\n  {\r\n    Country: \"Cambodia\",\r\n    Slug: \"cambodia\",\r\n    ISO2: \"KH\",\r\n  },\r\n  {\r\n    Country: \"French Guiana\",\r\n    Slug: \"french-guiana\",\r\n    ISO2: \"GF\",\r\n  },\r\n  {\r\n    Country: \"Iceland\",\r\n    Slug: \"iceland\",\r\n    ISO2: \"IS\",\r\n  },\r\n  {\r\n    Country: \"Northern Mariana Islands\",\r\n    Slug: \"northern-mariana-islands\",\r\n    ISO2: \"MP\",\r\n  },\r\n  {\r\n    Country: \"Saint Kitts and Nevis\",\r\n    Slug: \"saint-kitts-and-nevis\",\r\n    ISO2: \"KN\",\r\n  },\r\n  {\r\n    Country: \"Australia\",\r\n    Slug: \"australia\",\r\n    ISO2: \"AU\",\r\n  },\r\n  {\r\n    Country: \"Bahrain\",\r\n    Slug: \"bahrain\",\r\n    ISO2: \"BH\",\r\n  },\r\n  {\r\n    Country: \"Honduras\",\r\n    Slug: \"honduras\",\r\n    ISO2: \"HN\",\r\n  },\r\n  {\r\n    Country: \"Macao, SAR China\",\r\n    Slug: \"macao-sar-china\",\r\n    ISO2: \"MO\",\r\n  },\r\n  {\r\n    Country: \"Nigeria\",\r\n    Slug: \"nigeria\",\r\n    ISO2: \"NG\",\r\n  },\r\n  {\r\n    Country: \"South Georgia and the South Sandwich Islands\",\r\n    Slug: \"south-georgia-and-the-south-sandwich-islands\",\r\n    ISO2: \"GS\",\r\n  },\r\n  {\r\n    Country: \"Zambia\",\r\n    Slug: \"zambia\",\r\n    ISO2: \"ZM\",\r\n  },\r\n  {\r\n    Country: \"Belarus\",\r\n    Slug: \"belarus\",\r\n    ISO2: \"BY\",\r\n  },\r\n  {\r\n    Country: \"Congo (Kinshasa)\",\r\n    Slug: \"congo-kinshasa\",\r\n    ISO2: \"CD\",\r\n  },\r\n  {\r\n    Country: \"Lao PDR\",\r\n    Slug: \"lao-pdr\",\r\n    ISO2: \"LA\",\r\n  },\r\n  {\r\n    Country: \"Zimbabwe\",\r\n    Slug: \"zimbabwe\",\r\n    ISO2: \"ZW\",\r\n  },\r\n  {\r\n    Country: \"Antarctica\",\r\n    Slug: \"antarctica\",\r\n    ISO2: \"AQ\",\r\n  },\r\n  {\r\n    Country: \"Jordan\",\r\n    Slug: \"jordan\",\r\n    ISO2: \"JO\",\r\n  },\r\n  {\r\n    Country: \"Peru\",\r\n    Slug: \"peru\",\r\n    ISO2: \"PE\",\r\n  },\r\n  {\r\n    Country: \"Cape Verde\",\r\n    Slug: \"cape-verde\",\r\n    ISO2: \"CV\",\r\n  },\r\n  {\r\n    Country: \"French Polynesia\",\r\n    Slug: \"french-polynesia\",\r\n    ISO2: \"PF\",\r\n  },\r\n  {\r\n    Country: \"Slovakia\",\r\n    Slug: \"slovakia\",\r\n    ISO2: \"SK\",\r\n  },\r\n  {\r\n    Country: \"Turks and Caicos Islands\",\r\n    Slug: \"turks-and-caicos-islands\",\r\n    ISO2: \"TC\",\r\n  },\r\n  {\r\n    Country: \"Andorra\",\r\n    Slug: \"andorra\",\r\n    ISO2: \"AD\",\r\n  },\r\n  {\r\n    Country: \"Martinique\",\r\n    Slug: \"martinique\",\r\n    ISO2: \"MQ\",\r\n  },\r\n  {\r\n    Country: \"Mayotte\",\r\n    Slug: \"mayotte\",\r\n    ISO2: \"YT\",\r\n  },\r\n  {\r\n    Country: \"Nicaragua\",\r\n    Slug: \"nicaragua\",\r\n    ISO2: \"NI\",\r\n  },\r\n  {\r\n    Country: \"Pitcairn\",\r\n    Slug: \"pitcairn\",\r\n    ISO2: \"PN\",\r\n  },\r\n  {\r\n    Country: \"Brunei Darussalam\",\r\n    Slug: \"brunei\",\r\n    ISO2: \"BN\",\r\n  },\r\n  {\r\n    Country: \"Bulgaria\",\r\n    Slug: \"bulgaria\",\r\n    ISO2: \"BG\",\r\n  },\r\n  {\r\n    Country: \"Cyprus\",\r\n    Slug: \"cyprus\",\r\n    ISO2: \"CY\",\r\n  },\r\n  {\r\n    Country: \"Solomon Islands\",\r\n    Slug: \"solomon-islands\",\r\n    ISO2: \"SB\",\r\n  },\r\n  {\r\n    Country: \"Spain\",\r\n    Slug: \"spain\",\r\n    ISO2: \"ES\",\r\n  },\r\n  {\r\n    Country: \"Uganda\",\r\n    Slug: \"uganda\",\r\n    ISO2: \"UG\",\r\n  },\r\n  {\r\n    Country: \"Armenia\",\r\n    Slug: \"armenia\",\r\n    ISO2: \"AM\",\r\n  },\r\n  {\r\n    Country: \"Guam\",\r\n    Slug: \"guam\",\r\n    ISO2: \"GU\",\r\n  },\r\n  {\r\n    Country: \"Guyana\",\r\n    Slug: \"guyana\",\r\n    ISO2: \"GY\",\r\n  },\r\n  {\r\n    Country: \"Hong Kong, SAR China\",\r\n    Slug: \"hong-kong-sar-china\",\r\n    ISO2: \"HK\",\r\n  },\r\n  {\r\n    Country: \"Saint Lucia\",\r\n    Slug: \"saint-lucia\",\r\n    ISO2: \"LC\",\r\n  },\r\n  {\r\n    Country: \"Jamaica\",\r\n    Slug: \"jamaica\",\r\n    ISO2: \"JM\",\r\n  },\r\n  {\r\n    Country: \"South Africa\",\r\n    Slug: \"south-africa\",\r\n    ISO2: \"ZA\",\r\n  },\r\n  {\r\n    Country: \"Sudan\",\r\n    Slug: \"sudan\",\r\n    ISO2: \"SD\",\r\n  },\r\n  {\r\n    Country: \"Austria\",\r\n    Slug: \"austria\",\r\n    ISO2: \"AT\",\r\n  },\r\n  {\r\n    Country: \"Bangladesh\",\r\n    Slug: \"bangladesh\",\r\n    ISO2: \"BD\",\r\n  },\r\n  {\r\n    Country: \"Christmas Island\",\r\n    Slug: \"christmas-island\",\r\n    ISO2: \"CX\",\r\n  },\r\n  {\r\n    Country: \"Guinea\",\r\n    Slug: \"guinea\",\r\n    ISO2: \"GN\",\r\n  },\r\n  {\r\n    Country: \"Jersey\",\r\n    Slug: \"jersey\",\r\n    ISO2: \"JE\",\r\n  },\r\n  {\r\n    Country: \"Mauritania\",\r\n    Slug: \"mauritania\",\r\n    ISO2: \"MR\",\r\n  },\r\n  {\r\n    Country: \"Suriname\",\r\n    Slug: \"suriname\",\r\n    ISO2: \"SR\",\r\n  },\r\n  {\r\n    Country: \"Philippines\",\r\n    Slug: \"philippines\",\r\n    ISO2: \"PH\",\r\n  },\r\n  {\r\n    Country: \"South Sudan\",\r\n    Slug: \"south-sudan\",\r\n    ISO2: \"SS\",\r\n  },\r\n  {\r\n    Country: \"Uzbekistan\",\r\n    Slug: \"uzbekistan\",\r\n    ISO2: \"UZ\",\r\n  },\r\n  {\r\n    Country: \"Antigua and Barbuda\",\r\n    Slug: \"antigua-and-barbuda\",\r\n    ISO2: \"AG\",\r\n  },\r\n  {\r\n    Country: \"Costa Rica\",\r\n    Slug: \"costa-rica\",\r\n    ISO2: \"CR\",\r\n  },\r\n  {\r\n    Country: \"Korea (South)\",\r\n    Slug: \"korea-south\",\r\n    ISO2: \"KR\",\r\n  },\r\n  {\r\n    Country: \"Qatar\",\r\n    Slug: \"qatar\",\r\n    ISO2: \"QA\",\r\n  },\r\n  {\r\n    Country: \"Viet Nam\",\r\n    Slug: \"vietnam\",\r\n    ISO2: \"VN\",\r\n  },\r\n  {\r\n    Country: \"Benin\",\r\n    Slug: \"benin\",\r\n    ISO2: \"BJ\",\r\n  },\r\n  {\r\n    Country: \"Cameroon\",\r\n    Slug: \"cameroon\",\r\n    ISO2: \"CM\",\r\n  },\r\n  {\r\n    Country: \"Chile\",\r\n    Slug: \"chile\",\r\n    ISO2: \"CL\",\r\n  },\r\n  {\r\n    Country: \"French Southern Territories\",\r\n    Slug: \"french-southern-territories\",\r\n    ISO2: \"TF\",\r\n  },\r\n  {\r\n    Country: \"Saint Helena\",\r\n    Slug: \"saint-helena\",\r\n    ISO2: \"SH\",\r\n  },\r\n  {\r\n    Country: \"Bosnia and Herzegovina\",\r\n    Slug: \"bosnia-and-herzegovina\",\r\n    ISO2: \"BA\",\r\n  },\r\n  {\r\n    Country: \"Guernsey\",\r\n    Slug: \"guernsey\",\r\n    ISO2: \"GG\",\r\n  },\r\n  {\r\n    Country: \"Puerto Rico\",\r\n    Slug: \"puerto-rico\",\r\n    ISO2: \"PR\",\r\n  },\r\n  {\r\n    Country: \"Trinidad and Tobago\",\r\n    Slug: \"trinidad-and-tobago\",\r\n    ISO2: \"TT\",\r\n  },\r\n  {\r\n    Country: \"Cuba\",\r\n    Slug: \"cuba\",\r\n    ISO2: \"CU\",\r\n  },\r\n  {\r\n    Country: \"Libya\",\r\n    Slug: \"libya\",\r\n    ISO2: \"LY\",\r\n  },\r\n  {\r\n    Country: \"Mozambique\",\r\n    Slug: \"mozambique\",\r\n    ISO2: \"MZ\",\r\n  },\r\n  {\r\n    Country: \"Saint-Barthélemy\",\r\n    Slug: \"saint-barthélemy\",\r\n    ISO2: \"BL\",\r\n  },\r\n  {\r\n    Country: \"ALA Aland Islands\",\r\n    Slug: \"ala-aland-islands\",\r\n    ISO2: \"AX\",\r\n  },\r\n  {\r\n    Country: \"Dominica\",\r\n    Slug: \"dominica\",\r\n    ISO2: \"DM\",\r\n  },\r\n  {\r\n    Country: \"Ghana\",\r\n    Slug: \"ghana\",\r\n    ISO2: \"GH\",\r\n  },\r\n  {\r\n    Country: \"Micronesia, Federated States of\",\r\n    Slug: \"micronesia\",\r\n    ISO2: \"FM\",\r\n  },\r\n  {\r\n    Country: \"Mali\",\r\n    Slug: \"mali\",\r\n    ISO2: \"ML\",\r\n  },\r\n  {\r\n    Country: \"Montserrat\",\r\n    Slug: \"montserrat\",\r\n    ISO2: \"MS\",\r\n  },\r\n  {\r\n    Country: \"Bhutan\",\r\n    Slug: \"bhutan\",\r\n    ISO2: \"BT\",\r\n  },\r\n  {\r\n    Country: \"Cocos (Keeling) Islands\",\r\n    Slug: \"cocos-keeling-islands\",\r\n    ISO2: \"CC\",\r\n  },\r\n  {\r\n    Country: \"El Salvador\",\r\n    Slug: \"el-salvador\",\r\n    ISO2: \"SV\",\r\n  },\r\n  {\r\n    Country: \"Kenya\",\r\n    Slug: \"kenya\",\r\n    ISO2: \"KE\",\r\n  },\r\n  {\r\n    Country: \"Liberia\",\r\n    Slug: \"liberia\",\r\n    ISO2: \"LR\",\r\n  },\r\n  {\r\n    Country: \"Saint Pierre and Miquelon\",\r\n    Slug: \"saint-pierre-and-miquelon\",\r\n    ISO2: \"PM\",\r\n  },\r\n  {\r\n    Country: \"Bermuda\",\r\n    Slug: \"bermuda\",\r\n    ISO2: \"BM\",\r\n  },\r\n  {\r\n    Country: \"Comoros\",\r\n    Slug: \"comoros\",\r\n    ISO2: \"KM\",\r\n  },\r\n  {\r\n    Country: \"Estonia\",\r\n    Slug: \"estonia\",\r\n    ISO2: \"EE\",\r\n  },\r\n  {\r\n    Country: \"Ireland\",\r\n    Slug: \"ireland\",\r\n    ISO2: \"IE\",\r\n  },\r\n  {\r\n    Country: \"Israel\",\r\n    Slug: \"israel\",\r\n    ISO2: \"IL\",\r\n  },\r\n  {\r\n    Country: \"Namibia\",\r\n    Slug: \"namibia\",\r\n    ISO2: \"NA\",\r\n  },\r\n  {\r\n    Country: \"Canada\",\r\n    Slug: \"canada\",\r\n    ISO2: \"CA\",\r\n  },\r\n  {\r\n    Country: \"Japan\",\r\n    Slug: \"japan\",\r\n    ISO2: \"JP\",\r\n  },\r\n  {\r\n    Country: \"Saint-Martin (French part)\",\r\n    Slug: \"saint-martin-french-part\",\r\n    ISO2: \"MF\",\r\n  },\r\n  {\r\n    Country: \"Albania\",\r\n    Slug: \"albania\",\r\n    ISO2: \"AL\",\r\n  },\r\n  {\r\n    Country: \"Chad\",\r\n    Slug: \"chad\",\r\n    ISO2: \"TD\",\r\n  },\r\n  {\r\n    Country: \"New Caledonia\",\r\n    Slug: \"new-caledonia\",\r\n    ISO2: \"NC\",\r\n  },\r\n  {\r\n    Country: \"Senegal\",\r\n    Slug: \"senegal\",\r\n    ISO2: \"SN\",\r\n  },\r\n  {\r\n    Country: \"Bolivia\",\r\n    Slug: \"bolivia\",\r\n    ISO2: \"BO\",\r\n  },\r\n  {\r\n    Country: \"Guinea-Bissau\",\r\n    Slug: \"guinea-bissau\",\r\n    ISO2: \"GW\",\r\n  },\r\n  {\r\n    Country: \"Indonesia\",\r\n    Slug: \"indonesia\",\r\n    ISO2: \"ID\",\r\n  },\r\n  {\r\n    Country: \"Malta\",\r\n    Slug: \"malta\",\r\n    ISO2: \"MT\",\r\n  },\r\n  {\r\n    Country: \"Italy\",\r\n    Slug: \"italy\",\r\n    ISO2: \"IT\",\r\n  },\r\n  {\r\n    Country: \"Lebanon\",\r\n    Slug: \"lebanon\",\r\n    ISO2: \"LB\",\r\n  },\r\n  {\r\n    Country: \"Azerbaijan\",\r\n    Slug: \"azerbaijan\",\r\n    ISO2: \"AZ\",\r\n  },\r\n  {\r\n    Country: \"Belgium\",\r\n    Slug: \"belgium\",\r\n    ISO2: \"BE\",\r\n  },\r\n  {\r\n    Country: \"Denmark\",\r\n    Slug: \"denmark\",\r\n    ISO2: \"DK\",\r\n  },\r\n  {\r\n    Country: \"Faroe Islands\",\r\n    Slug: \"faroe-islands\",\r\n    ISO2: \"FO\",\r\n  },\r\n  {\r\n    Country: \"Germany\",\r\n    Slug: \"germany\",\r\n    ISO2: \"DE\",\r\n  },\r\n  {\r\n    Country: \"Madagascar\",\r\n    Slug: \"madagascar\",\r\n    ISO2: \"MG\",\r\n  },\r\n  {\r\n    Country: \"Niue\",\r\n    Slug: \"niue\",\r\n    ISO2: \"NU\",\r\n  },\r\n  {\r\n    Country: \"Poland\",\r\n    Slug: \"poland\",\r\n    ISO2: \"PL\",\r\n  },\r\n  {\r\n    Country: \"Syrian Arab Republic (Syria)\",\r\n    Slug: \"syria\",\r\n    ISO2: \"SY\",\r\n  },\r\n  {\r\n    Country: \"Uruguay\",\r\n    Slug: \"uruguay\",\r\n    ISO2: \"UY\",\r\n  },\r\n  {\r\n    Country: \"Serbia\",\r\n    Slug: \"serbia\",\r\n    ISO2: \"RS\",\r\n  },\r\n  {\r\n    Country: \"Gambia\",\r\n    Slug: \"gambia\",\r\n    ISO2: \"GM\",\r\n  },\r\n  {\r\n    Country: \"Kyrgyzstan\",\r\n    Slug: \"kyrgyzstan\",\r\n    ISO2: \"KG\",\r\n  },\r\n  {\r\n    Country: \"Croatia\",\r\n    Slug: \"croatia\",\r\n    ISO2: \"HR\",\r\n  },\r\n  {\r\n    Country: \"Moldova\",\r\n    Slug: \"moldova\",\r\n    ISO2: \"MD\",\r\n  },\r\n  {\r\n    Country: \"Virgin Islands, US\",\r\n    Slug: \"virgin-islands\",\r\n    ISO2: \"VI\",\r\n  },\r\n  {\r\n    Country: \"Taiwan, Republic of China\",\r\n    Slug: \"taiwan\",\r\n    ISO2: \"TW\",\r\n  },\r\n  {\r\n    Country: \"Guadeloupe\",\r\n    Slug: \"guadeloupe\",\r\n    ISO2: \"GP\",\r\n  },\r\n  {\r\n    Country: \"Nauru\",\r\n    Slug: \"nauru\",\r\n    ISO2: \"NR\",\r\n  },\r\n  {\r\n    Country: \"Cayman Islands\",\r\n    Slug: \"cayman-islands\",\r\n    ISO2: \"KY\",\r\n  },\r\n  {\r\n    Country: \"Portugal\",\r\n    Slug: \"portugal\",\r\n    ISO2: \"PT\",\r\n  },\r\n  {\r\n    Country: \"Svalbard and Jan Mayen Islands\",\r\n    Slug: \"svalbard-and-jan-mayen-islands\",\r\n    ISO2: \"SJ\",\r\n  },\r\n  {\r\n    Country: \"Algeria\",\r\n    Slug: \"algeria\",\r\n    ISO2: \"DZ\",\r\n  },\r\n  {\r\n    Country: \"Burkina Faso\",\r\n    Slug: \"burkina-faso\",\r\n    ISO2: \"BF\",\r\n  },\r\n  {\r\n    Country: \"Egypt\",\r\n    Slug: \"egypt\",\r\n    ISO2: \"EG\",\r\n  },\r\n  {\r\n    Country: \"Colombia\",\r\n    Slug: \"colombia\",\r\n    ISO2: \"CO\",\r\n  },\r\n  {\r\n    Country: \"Norfolk Island\",\r\n    Slug: \"norfolk-island\",\r\n    ISO2: \"NF\",\r\n  },\r\n  {\r\n    Country: \"Réunion\",\r\n    Slug: \"réunion\",\r\n    ISO2: \"RE\",\r\n  },\r\n  {\r\n    Country: \"Tajikistan\",\r\n    Slug: \"tajikistan\",\r\n    ISO2: \"TJ\",\r\n  },\r\n  {\r\n    Country: \"Tonga\",\r\n    Slug: \"tonga\",\r\n    ISO2: \"TO\",\r\n  },\r\n  {\r\n    Country: \"Heard and Mcdonald Islands\",\r\n    Slug: \"heard-and-mcdonald-islands\",\r\n    ISO2: \"HM\",\r\n  },\r\n  {\r\n    Country: \"Sri Lanka\",\r\n    Slug: \"sri-lanka\",\r\n    ISO2: \"LK\",\r\n  },\r\n  {\r\n    Country: \"Lesotho\",\r\n    Slug: \"lesotho\",\r\n    ISO2: \"LS\",\r\n  },\r\n  {\r\n    Country: \"Myanmar\",\r\n    Slug: \"myanmar\",\r\n    ISO2: \"MM\",\r\n  },\r\n  {\r\n    Country: \"United Kingdom\",\r\n    Slug: \"united-kingdom\",\r\n    ISO2: \"GB\",\r\n  },\r\n  {\r\n    Country: \"Angola\",\r\n    Slug: \"angola\",\r\n    ISO2: \"AO\",\r\n  },\r\n  {\r\n    Country: \"Brazil\",\r\n    Slug: \"brazil\",\r\n    ISO2: \"BR\",\r\n  },\r\n  {\r\n    Country: \"Kiribati\",\r\n    Slug: \"kiribati\",\r\n    ISO2: \"KI\",\r\n  },\r\n  {\r\n    Country: \"Palestinian Territory\",\r\n    Slug: \"palestine\",\r\n    ISO2: \"PS\",\r\n  },\r\n  {\r\n    Country: \"Congo (Brazzaville)\",\r\n    Slug: \"congo-brazzaville\",\r\n    ISO2: \"CG\",\r\n  },\r\n  {\r\n    Country: \"Malaysia\",\r\n    Slug: \"malaysia\",\r\n    ISO2: \"MY\",\r\n  },\r\n  {\r\n    Country: \"Monaco\",\r\n    Slug: \"monaco\",\r\n    ISO2: \"MC\",\r\n  },\r\n  {\r\n    Country: \"Tokelau\",\r\n    Slug: \"tokelau\",\r\n    ISO2: \"TK\",\r\n  },\r\n  {\r\n    Country: \"Western Sahara\",\r\n    Slug: \"western-sahara\",\r\n    ISO2: \"EH\",\r\n  },\r\n  {\r\n    Country: \"Belize\",\r\n    Slug: \"belize\",\r\n    ISO2: \"BZ\",\r\n  },\r\n  {\r\n    Country: \"Romania\",\r\n    Slug: \"romania\",\r\n    ISO2: \"RO\",\r\n  },\r\n  {\r\n    Country: \"United Arab Emirates\",\r\n    Slug: \"united-arab-emirates\",\r\n    ISO2: \"AE\",\r\n  },\r\n  {\r\n    Country: \"Gibraltar\",\r\n    Slug: \"gibraltar\",\r\n    ISO2: \"GI\",\r\n  },\r\n  {\r\n    Country: \"Maldives\",\r\n    Slug: \"maldives\",\r\n    ISO2: \"MV\",\r\n  },\r\n  {\r\n    Country: \"Morocco\",\r\n    Slug: \"morocco\",\r\n    ISO2: \"MA\",\r\n  },\r\n  {\r\n    Country: \"Sierra Leone\",\r\n    Slug: \"sierra-leone\",\r\n    ISO2: \"SL\",\r\n  },\r\n  {\r\n    Country: \"Cook Islands\",\r\n    Slug: \"cook-islands\",\r\n    ISO2: \"CK\",\r\n  },\r\n  {\r\n    Country: \"Venezuela (Bolivarian Republic)\",\r\n    Slug: \"venezuela\",\r\n    ISO2: \"VE\",\r\n  },\r\n  {\r\n    Country: \"Greece\",\r\n    Slug: \"greece\",\r\n    ISO2: \"GR\",\r\n  },\r\n  {\r\n    Country: \"Iran, Islamic Republic of\",\r\n    Slug: \"iran\",\r\n    ISO2: \"IR\",\r\n  },\r\n  {\r\n    Country: \"Kuwait\",\r\n    Slug: \"kuwait\",\r\n    ISO2: \"KW\",\r\n  },\r\n  {\r\n    Country: \"Thailand\",\r\n    Slug: \"thailand\",\r\n    ISO2: \"TH\",\r\n  },\r\n  {\r\n    Country: \"Turkmenistan\",\r\n    Slug: \"turkmenistan\",\r\n    ISO2: \"TM\",\r\n  },\r\n  {\r\n    Country: \"Côte d'Ivoire\",\r\n    Slug: \"cote-divoire\",\r\n    ISO2: \"CI\",\r\n  },\r\n  {\r\n    Country: \"Niger\",\r\n    Slug: \"niger\",\r\n    ISO2: \"NE\",\r\n  },\r\n  {\r\n    Country: \"Somalia\",\r\n    Slug: \"somalia\",\r\n    ISO2: \"SO\",\r\n  },\r\n  {\r\n    Country: \"Liechtenstein\",\r\n    Slug: \"liechtenstein\",\r\n    ISO2: \"LI\",\r\n  },\r\n  {\r\n    Country: \"Iraq\",\r\n    Slug: \"iraq\",\r\n    ISO2: \"IQ\",\r\n  },\r\n  {\r\n    Country: \"Isle of Man\",\r\n    Slug: \"isle-of-man\",\r\n    ISO2: \"IM\",\r\n  },\r\n  {\r\n    Country: \"Turkey\",\r\n    Slug: \"turkey\",\r\n    ISO2: \"TR\",\r\n  },\r\n  {\r\n    Country: \"Ukraine\",\r\n    Slug: \"ukraine\",\r\n    ISO2: \"UA\",\r\n  },\r\n  {\r\n    Country: \"British Virgin Islands\",\r\n    Slug: \"british-virgin-islands\",\r\n    ISO2: \"VG\",\r\n  },\r\n  {\r\n    Country: \"France\",\r\n    Slug: \"france\",\r\n    ISO2: \"FR\",\r\n  },\r\n  {\r\n    Country: \"US Minor Outlying Islands\",\r\n    Slug: \"us-minor-outlying-islands\",\r\n    ISO2: \"UM\",\r\n  },\r\n  {\r\n    Country: \"Central African Republic\",\r\n    Slug: \"central-african-republic\",\r\n    ISO2: \"CF\",\r\n  },\r\n  {\r\n    Country: \"Mauritius\",\r\n    Slug: \"mauritius\",\r\n    ISO2: \"MU\",\r\n  },\r\n  {\r\n    Country: \"Mexico\",\r\n    Slug: \"mexico\",\r\n    ISO2: \"MX\",\r\n  },\r\n  {\r\n    Country: \"China\",\r\n    Slug: \"china\",\r\n    ISO2: \"CN\",\r\n  },\r\n  {\r\n    Country: \"Montenegro\",\r\n    Slug: \"montenegro\",\r\n    ISO2: \"ME\",\r\n  },\r\n  {\r\n    Country: \"Yemen\",\r\n    Slug: \"yemen\",\r\n    ISO2: \"YE\",\r\n  },\r\n  {\r\n    Country: \"Seychelles\",\r\n    Slug: \"seychelles\",\r\n    ISO2: \"SC\",\r\n  },\r\n  {\r\n    Country: \"Togo\",\r\n    Slug: \"togo\",\r\n    ISO2: \"TG\",\r\n  },\r\n]\r\n\r\nconst ISOMap = {}\r\nfor (const item of countryISO) {\r\n  ISOMap[item.Slug] = item\r\n}\r\n\r\nexport default ISOMap\r\n","import { combineReducers } from \"redux\"\r\nimport {\r\n  SET_COUNTRIES,\r\n  SET_SUMMARY,\r\n  UPDATE_REQUEST_STATUS,\r\n  ADD_GRAPH_DATA,\r\n  SET_TAB,\r\n  ADD_NEWS,\r\n} from \"./actions\"\r\n\r\nimport { summary, countries } from \"../data/summaryFactory\"\r\nimport ISOMap from \"../data/countryISOCode\"\r\n\r\nconst initialCountries = countries\r\nconst countriesReducer = (state = initialCountries, action) => {\r\n  switch (action.type) {\r\n    case SET_COUNTRIES: {\r\n      const countries = action.payload\r\n      return { ...countries }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initialSummary = summary\r\nconst summaryReducer = (state = initialSummary, action) => {\r\n  switch (action.type) {\r\n    case SET_SUMMARY: {\r\n      const summary = action.payload\r\n      return { ...summary }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initialGraphData = {}\r\nconst graphDataReducer = (state = initialGraphData, action) => {\r\n  switch (action.type) {\r\n    case ADD_GRAPH_DATA: {\r\n      const data = action.payload\r\n      return { ...state, ...data }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initialRequestStatuses = {}\r\nconst requestStatusReducer = (state = initialRequestStatuses, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_REQUEST_STATUS: {\r\n      const status = action.payload\r\n      return { ...state, ...status }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initialIso = ISOMap\r\nconst isoReducer = (state = initialIso) => {\r\n  return state\r\n}\r\n\r\nconst initialNews = {}\r\nconst newsReducer = (state = initialNews, action) => {\r\n  switch (action.type) {\r\n    case ADD_NEWS: {\r\n      const news = action.payload\r\n      return { ...state, ...news }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initialTab = { tab: \"home\" }\r\nconst tabReducer = (state = initialTab, action) => {\r\n  switch (action.type) {\r\n    case SET_TAB: {\r\n      const { tab } = action.payload\r\n      return { tab: tab }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  countries: countriesReducer,\r\n  summary: summaryReducer,\r\n  graphData: graphDataReducer,\r\n  requestStatuses: requestStatusReducer,\r\n  iso: isoReducer,\r\n  news: newsReducer,\r\n  tab: tabReducer,\r\n})\r\n","import { createStore, applyMiddleware } from \"redux\"\r\nimport logger from \"redux-logger\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst middlewares =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? applyMiddleware(thunk)\r\n    : applyMiddleware(thunk, logger)\r\n\r\nconst store = createStore(rootReducer, middlewares)\r\n\r\nexport default store\r\n","import React from \"react\"\r\n\r\nimport \"./Header.css\"\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>\r\n        <span>Covid-19</span> Tracking\r\n      </h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\nimport { connect } from \"react-redux\"\n\nimport \"./Menu.css\"\n\nimport { setTab } from \"redux/actions\"\n\nconst MENU_TABS = [\"home\", \"newsfeed\"]\n\nfunction Menu({ tab, setTab }) {\n  const handleOnclick = (clickedTab) => {\n    if (tab !== clickedTab) setTab(clickedTab)\n  }\n  return (\n    <div className=\"menu\">\n      <div className=\"menu-home\">\n        {MENU_TABS.map((t) => {\n          const isCurrentTab = t === tab\n          const bgStyle = isCurrentTab ? { backgroundColor: \"#f9fcff\" } : null\n          const fontStyle = isCurrentTab ? { color: \"#1a1053\" } : null\n          return (\n            <div\n              className=\"menu-item\"\n              key={t}\n              onClick={() => handleOnclick(t)}\n              style={bgStyle}\n            >\n              <i className={`flaticon-${t} icon`} style={fontStyle} />\n              <h2 style={fontStyle}>{t.toUpperCase()}</h2>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return { tab: state.tab.tab }\n}\n\nconst mapDispatchToProps = { setTab }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu)\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport \"./Summary.css\"\r\n\r\nconst getIncreasePercent = (newNum, totalNum) => {\r\n  const oldNum = totalNum - newNum\r\n  return `${Math.round((newNum / oldNum) * 100)}%`\r\n}\r\n\r\nfunction Summary({ summary }) {\r\n  const {\r\n    NewConfirmed: newConfirmed,\r\n    TotalConfirmed: totalConfirmed,\r\n    NewDeaths: newDeaths,\r\n    TotalDeaths: totalDeaths,\r\n    NewRecovered: newRecovered,\r\n    TotalRecovered: totalRecovered,\r\n  } = summary\r\n\r\n  const totalActive = totalConfirmed - totalRecovered\r\n  const newActive = newRecovered ? newConfirmed - newRecovered : 0\r\n\r\n  return (\r\n    <div className=\"summary\">\r\n      <div className=\"summary-card\">\r\n        <h3>Total</h3>\r\n        <p>{totalConfirmed || \"...\"}</p>\r\n        {newConfirmed && (\r\n          <div className=\"increase-num\">\r\n            <small>{getIncreasePercent(newConfirmed, totalConfirmed)}</small>\r\n            <div className=\"triangle-icon\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"summary-card\">\r\n        <h3>Active</h3>\r\n        <p>{totalActive || \"...\"}</p>\r\n        {newActive && (\r\n          <div className=\"increase-num\">\r\n            <small>{getIncreasePercent(newActive, totalActive)}</small>\r\n            <div className=\"triangle-icon\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"summary-card\">\r\n        <h3>Recovered</h3>\r\n        <p>{totalRecovered || \"...\"}</p>\r\n        {newRecovered && (\r\n          <div className=\"increase-num\">\r\n            <small>{getIncreasePercent(newRecovered, totalRecovered)}</small>\r\n            <div className=\"triangle-icon\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"summary-card\">\r\n        <h3>Death</h3>\r\n        <p>{totalDeaths || \"...\"}</p>\r\n        {newDeaths && (\r\n          <div className=\"increase-num\">\r\n            <small>{getIncreasePercent(newDeaths, totalDeaths)}</small>\r\n            <div className=\"triangle-icon\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { summary: state.summary }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Summary)\r\n","import React from \"react\"\r\n\r\nimport \"./Tick.css\"\r\n\r\nconst Y_OFFSET = 20 // space between axis and tick\r\n\r\nfunction Tick(props) {\r\n  const { x, y, payload, textAnchor, type, axisType } = props\r\n  const value =\r\n    type === \"date\"\r\n      ? parseDateForXAxis(payload.value)\r\n      : parseNumForYAxis(payload.value)\r\n  const transform =\r\n    axisType === \"x\"\r\n      ? `translate(${x},${y + Y_OFFSET})`\r\n      : `translate(${x},${y})`\r\n  return (\r\n    <g transform={transform}>\r\n      <text className=\"tick-value-text\" textAnchor={textAnchor}>\r\n        {value}\r\n      </text>\r\n    </g>\r\n  )\r\n}\r\n\r\nexport default Tick\r\n\r\n//Helpers\r\nexport const parseDateForXAxis = (dateStr) => {\r\n  const date = new Date(dateStr)\r\n  return `${monthToStr[date.getMonth() + 1]} ${date.getDate()}`\r\n}\r\n\r\nconst monthToStr = {\r\n  1: \"Jan\",\r\n  2: \"Feb\",\r\n  3: \"Mar\",\r\n  4: \"Apr\",\r\n  5: \"May\",\r\n  6: \"Jun\",\r\n  7: \"Jul\",\r\n  8: \"Aug\",\r\n  9: \"Sep\",\r\n  10: \"Oct\",\r\n  11: \"Nov\",\r\n  12: \"Dec\",\r\n}\r\n\r\nconst parseNumForYAxis = (num) => {\r\n  const oneMil = 1000000\r\n  const oneK = 1000\r\n  const value =\r\n    num > oneMil\r\n      ? `${Math.round(num / oneMil)}M`\r\n      : num > oneK\r\n      ? `${Math.round(num / oneK)}K`\r\n      : num\r\n  return value\r\n}\r\n","import React from \"react\"\r\n\r\nimport \"./LegendItem.css\"\r\n\r\nfunction LegendItem({ payload }) {\r\n  return (\r\n    <div className=\"legend\">\r\n      {payload.map((entry) => {\r\n        return (\r\n          <div className=\"legend-item\" key={entry.value}>\r\n            <div className=\"legend-icon\">\r\n              <div style={{ backgroundColor: getColor(entry.value) }}></div>\r\n            </div>\r\n            <p className=\"legend-text\">{entry.value}</p>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LegendItem\r\n\r\nconst getColor = (type) => {\r\n  switch (type) {\r\n    case \"Confirmed\":\r\n      return \"#f9345e\"\r\n    case \"Recovered\":\r\n      return \"#1cb142\"\r\n    default:\r\n      return \"#9577ff\"\r\n  }\r\n}\r\n","import React from \"react\"\r\n\r\nimport \"./CustomTooltip.css\"\r\n\r\nimport { parseDateForXAxis } from \"./Tick\"\r\n\r\nimport { getShortName } from \"helpers\"\r\n\r\nfunction CustomTooltip({ payload, country }) {\r\n  if (!payload || !payload.length) return null\r\n  return (\r\n    <div className=\"tooltip\">\r\n      <p className=\"tooltip-country\">\r\n        {getShortName(payload[0].payload.Country)}\r\n      </p>\r\n      <p className=\"tooltip-date\">\r\n        {parseDateForXAxis(payload[0].payload.Date)}\r\n      </p>\r\n      {payload.map((item) => {\r\n        return (\r\n          <div className=\"tooltip-item\" key={item.name}>\r\n            <p className=\"tooltip-item-key\">{item.name}</p>\r\n            <p className=\"tooltip-item-value\" style={{ color: item.color }}>\r\n              {item.value}\r\n            </p>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomTooltip\r\n","import React, { useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  ResponsiveContainer,\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\"\r\n\r\nimport {\r\n  fetchCountryDataAllTime,\r\n  fetchCountryDataOneMonth,\r\n} from \"redux/actions\"\r\n\r\nimport Tick from \"./Tick\"\r\nimport LegendItem from \"./LegendItem\"\r\nimport CustomTooltip from \"./CustomTooltip\"\r\n\r\nfunction Graph({\r\n  countrySlug,\r\n  fetchCountryDataAllTime,\r\n  fetchCountryDataOneMonth,\r\n  graphData,\r\n}) {\r\n  useEffect(() => {\r\n    if (countrySlug && !graphData.length) {\r\n      fetchCountryDataAllTime(countrySlug)\r\n      //   fetchCountryDataOneMonth(countrySlug)\r\n    }\r\n  }, [countrySlug, graphData.length, fetchCountryDataAllTime])\r\n\r\n  const margin = { left: 60, top: 70, right: 20, bottom: 0 }\r\n  return (\r\n    <ResponsiveContainer height=\"95%\" debounce={1}>\r\n      <LineChart data={graphData} margin={margin}>\r\n        <Line\r\n          dot={false}\r\n          type={\"basisOpen\"}\r\n          dataKey=\"Confirmed\"\r\n          stroke=\"#f9345e\"\r\n          strokeWidth={3}\r\n          isAnimationActive={true}\r\n        />\r\n        <Line\r\n          dot={false}\r\n          type={\"basisOpen\"}\r\n          dataKey=\"Recovered\"\r\n          stroke=\"#6bd301\"\r\n          strokeWidth={3}\r\n          isAnimationActive={true}\r\n        />\r\n        <Line\r\n          dot={false}\r\n          type={\"basisOpen\"}\r\n          dataKey=\"Deaths\"\r\n          stroke=\"#9577ff\"\r\n          strokeWidth={3}\r\n          isAnimationActive={true}\r\n        />\r\n        <XAxis\r\n          width={1}\r\n          dataKey={\"Date\"}\r\n          tickLine={false}\r\n          tick={<Tick type={\"date\"} axisType=\"x\" />}\r\n          minTickGap={40}\r\n        />\r\n        <YAxis\r\n          width={1}\r\n          dataKey={\"Confirmed\"}\r\n          tickLine={false}\r\n          minTickGap={40}\r\n          tick={<Tick type={\"number\"} axisType=\"y\" />}\r\n        ></YAxis>\r\n        <Tooltip content={<CustomTooltip />} />\r\n        <Legend\r\n          wrapperStyle={{ top: \"20rem\", right: 0 }}\r\n          content={<LegendItem />}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, { countrySlug }) => {\r\n  return { graphData: state.graphData[countrySlug] || [] }\r\n}\r\n\r\nconst mapDispatchToProps = { fetchCountryDataAllTime, fetchCountryDataOneMonth }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Graph)\r\n","import React, { useEffect, useState, useMemo } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Annotation,\r\n  ZoomableGroup,\r\n} from \"react-simple-maps\"\r\nimport { scaleLinear } from \"d3-scale\"\r\n\r\nimport \"./Map.css\"\r\n\r\nimport { getShortName } from \"helpers\"\r\n\r\nconst GEO_URL =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\r\n\r\nfunction Map({ iso, countries, countrySlug }) {\r\n  const [height, setHeight] = useState(200)\r\n\r\n  const countryColorMap = useMemo(() => getCountryColor(countries, iso), [\r\n    iso,\r\n    countries,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const mapContainer = document.getElementById(\"map\")\r\n    const { height } = mapContainer.getBoundingClientRect()\r\n    setHeight(height)\r\n  }, [])\r\n  return (\r\n    <ComposableMap\r\n      projection={\"geoMercator\"}\r\n      height={height}\r\n      projectionConfig={{ scale: height / 4 }}\r\n    >\r\n      <ZoomableGroup zoom={2} minZoom={1} maxZoom={4}>\r\n        <Geographies geography={GEO_URL}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n              const isoCode = geo.properties.ISO_A2\r\n              const color = countryColorMap[isoCode] || \"#ffffff\"\r\n              return <Geography key={geo.rsmKey} geography={geo} fill={color} />\r\n            })\r\n          }\r\n        </Geographies>\r\n        <Geographies geography={GEO_URL}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n              const isoCode = geo.properties.ISO_A2\r\n              const { coordinates } = geo.geometry\r\n              if (iso[countrySlug].ISO2 !== isoCode || !coordinates.length) {\r\n                return null\r\n              }\r\n              // If selected country\r\n              let curr = coordinates\r\n              while (Array.isArray(curr[0][0])) {\r\n                curr = [...curr[0]]\r\n              }\r\n              curr = curr[Math.round(curr.length / 2)]\r\n              return (\r\n                <Annotation\r\n                  key={geo.rsmKey}\r\n                  subject={curr}\r\n                  dx={10}\r\n                  dy={0}\r\n                  connectorProps={{\r\n                    stroke: \"#9a7ffd\",\r\n                    strokeWidth: 1,\r\n                    strokeLinecap: \"round\",\r\n                  }}\r\n                >\r\n                  <g>\r\n                    <rect className=\"map-text-box\" rx={2} ry={2} />\r\n                    <text className=\"map-text\">\r\n                      {getShortName(countries[countrySlug].Country)}\r\n                    </text>\r\n                    <text className=\"map-case\">Case: </text>\r\n                    <text className=\"map-num\">\r\n                      {countries[countrySlug].TotalConfirmed}\r\n                    </text>\r\n                  </g>\r\n                </Annotation>\r\n              )\r\n            })\r\n          }\r\n        </Geographies>\r\n      </ZoomableGroup>\r\n    </ComposableMap>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    iso: state.iso,\r\n    countries: state.countries,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Map)\r\n\r\nconst colorScale = scaleLinear().domain([1, 200000]).range([\"#ffffff\", \"red\"])\r\n\r\nconst getCountryColor = (countries, iso) => {\r\n  const countryColor = {}\r\n  for (const countrySlug in countries) {\r\n    const iso2 = iso[countrySlug].ISO2\r\n    const color = colorScale(countries[countrySlug].TotalConfirmed)\r\n    countryColor[iso2] = color\r\n  }\r\n  return countryColor\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport \"./Details.css\"\r\n\r\nimport Graph from \"./shared/Graph\"\r\nimport Map from \"./shared/Map\"\r\n\r\nimport { getShortName } from \"helpers\"\r\n\r\nfunction Details({ countries }) {\r\n  const searchInput = useRef(null)\r\n\r\n  const [countryList, setCountryList] = useState([])\r\n  const [selected, setSelected] = useState({\r\n    Country: \"\",\r\n    CountryCode: \"\",\r\n    Slug: \"\",\r\n    NewConfirmed: 0,\r\n    TotalConfirmed: 0,\r\n    NewDeaths: 0,\r\n    TotalDeaths: 0,\r\n    NewRecovered: 0,\r\n    TotalRecovered: 0,\r\n    Date: \"\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    setCountryList(sortCountries(countries))\r\n  }, [countries])\r\n\r\n  const handleSearchInput = () => {\r\n    setCountryList(sortCountries(countries, searchInput.current.value))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!selected[\"Country\"] && countryList.length) {\r\n      setSelected(countryList[0])\r\n    }\r\n  }, [countryList, selected])\r\n\r\n  return (\r\n    <div className=\"details\">\r\n      <div className=\"inner-container\">\r\n        <div className=\"search\">\r\n          <input\r\n            ref={searchInput}\r\n            type=\"text\"\r\n            placeholder=\"Search Country\"\r\n            onKeyDown={handleSearchInput}\r\n          />\r\n        </div>\r\n        <div className=\"list-container\">\r\n          <div className=\"list\">\r\n            {Object.values(countryList).map((country) => {\r\n              const onClick = () => {\r\n                setSelected(country)\r\n              }\r\n\r\n              const isSelected = selected.Slug === country.Slug\r\n              return (\r\n                <div\r\n                  id={`list-id-${country[\"Slug\"]}`}\r\n                  className=\"list-item\"\r\n                  key={country[\"Slug\"]}\r\n                  onClick={onClick}\r\n                  style={isSelected ? { backgroundColor: \"#edeffd\" } : null}\r\n                >\r\n                  <p className=\"list-case-num\">{country[\"TotalConfirmed\"]}</p>\r\n                  <p className=\"list-name\">\r\n                    {getShortName(country[\"Country\"])}\r\n                  </p>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div id=\"map\" className=\"map\">\r\n          <Map countrySlug={selected.Slug} />\r\n        </div>\r\n        <div id=\"graph\" className=\"graph\">\r\n          <p className=\"graph-title\">Logarithmic</p>\r\n          <Graph countrySlug={selected.Slug} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { countries: state.countries }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Details)\r\n\r\nconst sortCountries = (countries, searchKey = \"\") => {\r\n  let arr = []\r\n\r\n  if (!searchKey || searchKey === \" \") {\r\n    arr = Object.values(countries)\r\n  } else {\r\n    const searchRegex = new RegExp(searchKey, \"i\")\r\n    for (const country of Object.values(countries)) {\r\n      const searchResult = country.Country.search(searchRegex)\r\n      console.log(searchRegex, searchResult)\r\n      if (searchResult > -1) arr.push(country)\r\n    }\r\n  }\r\n\r\n  arr.sort((a, b) => {\r\n    return b[\"TotalConfirmed\"] - a[\"TotalConfirmed\"]\r\n  })\r\n  return arr\r\n}\r\n","import React from \"react\"\r\n\r\nimport \"./Extra.css\"\r\n\r\nfunction Extra() {\r\n  return (\r\n    <div className=\"extra\">\r\n      <lottie-player\r\n        src=\"https://assets5.lottiefiles.com/packages/lf20_nKCnOy.json\"\r\n        background=\"transparent\"\r\n        style={{ height: \"200rem\", width: \"200rem\" }}\r\n        speed=\"1\"\r\n        loop\r\n        autoplay\r\n      ></lottie-player>\r\n      <div className=\"author-box\">\r\n        <p className=\"author\">\r\n          Author:{\" \"}\r\n          <a href=\"http://www.loc-phan.com\" target=\"_blank\">\r\n            Tan Loc Phan\r\n          </a>\r\n        </p>\r\n        <div className=\"underline\"></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Extra\r\n","import React from \"react\"\r\n\r\nimport \"./Carousel.css\"\r\n\r\nfunction Carousel({ data }) {\r\n  if (!data || !data.items.length) return null\r\n  return (\r\n    <>\r\n      <p className=\"carousel-title\">{data.title}</p>\r\n      <div className=\"carousel-container\">\r\n        <div className=\"carousel\">\r\n          {data.items.map((item, idx) => {\r\n            const titleTokens = item.title ? item.title.split(\" \") : []\r\n            const title = `${titleTokens.slice(0, 15).join(\" \")}${\r\n              titleTokens.length > 15 ? \" ...\" : \"\"\r\n            }`\r\n            const tokens = item.description.split(\" \")\r\n            const summary = `${tokens.slice(0, 30).join(\" \")}${\r\n              tokens.length > 30 ? \" ...\" : \"\"\r\n            }`\r\n            return (\r\n              <div className=\"carousel-item\" key={item.guid + idx}>\r\n                <a href={item.link} target=\"_blank\" className=\"item-link-icon\">\r\n                  <i className=\"flaticon-out\" />\r\n                </a>\r\n                <div className=\"item-content\">\r\n                  <p className=\"item-title\">{title}</p>\r\n                  <p className=\"item-date\">{item.pubDate}</p>\r\n                  <p className=\"item-summary\">{summary}</p>\r\n                </div>\r\n                <a href={item.link} target=\"_blank\" className=\"item-link\">\r\n                  More\r\n                </a>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Carousel\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport \"./News.css\"\r\n\r\nimport Carousel from \"./shared/Carousel\"\r\n\r\nfunction News({ who, cdc, press }) {\r\n  return (\r\n    <div className=\"news\">\r\n      <div className=\"inner-container\">\r\n        <Carousel data={who} />\r\n        <Carousel data={cdc} />\r\n        <Carousel data={press} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { who, cdc, press } = state.news\r\n  return { who, cdc, press }\r\n}\r\n\r\nexport default connect(mapStateToProps)(News)\r\n","import React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport \"./App.css\"\n\nimport {\n  fetchCountries,\n  fetchWhoRss,\n  fetchCdcRss,\n  fetchPress,\n} from \"redux/actions\"\n\nimport Header from \"./components/Header\"\nimport Menu from \"./components/Menu\"\nimport Summary from \"./components/Summary\"\nimport Details from \"./components/Details\"\nimport Extra from \"./components/Extra\"\nimport News from \"./components/News\"\n\nfunction App({ tab, fetchCountries, fetchWhoRss, fetchCdcRss, fetchPress }) {\n  useEffect(() => {\n    fetchCountries()\n    fetchWhoRss()\n    fetchCdcRss()\n    fetchPress()\n  }, [fetchCountries, fetchWhoRss])\n\n  return (\n    <div className={`App ${tab}`}>\n      <Menu />\n      <Header />\n      <Extra />\n      {tab === \"home\" ? (\n        <>\n          <Summary />\n          <Details />\n        </>\n      ) : (\n        <News />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return { tab: state.tab.tab }\n}\n\nconst mapDispatchToProps = {\n  fetchCountries,\n  fetchWhoRss,\n  fetchCdcRss,\n  fetchPress,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport store from \"./redux/store\"\n\nimport \"./index.css\"\nimport \"./icons/flaticon.css\"\n\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}